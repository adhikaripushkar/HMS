@model HospitalManagementSystem.Models.DemandMasterModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_StockLayout.cshtml";
}
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>
<script src="~/Scripts/jquery.ui.datepicker.js"></script>
<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />


<style>

     select {

      width: 210px;
        height: 27px;
  
   }



</style>
<script>
    var j = $.noConflict();
  j(function() {
      j("#DemandDate").datepicker();
  });
  </script>

<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();

    });
</script>

<h2 style="text-align:center;">Demand</h2>

<div class="contentWrapper">
@using (Html.BeginForm("Edit", "Demand", FormMethod.Post, new { @id = "FormId" }))
{
    
    
    <div class="bs-docs-example form-inline">
    @Html.HiddenFor(model=>model.ItemDemandID)
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Edit</legend>

        <div class="row-fluid singleline">

            <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.ItemDemandNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ItemDemandNo)
            @Html.ValidationMessageFor(model => model.ItemDemandNo)
        </div>
                </label>

            <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.DepartmentID)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.DepartmentID, HospitalManagementSystem.Utility.GetDepartmentList())
            @Html.ValidationMessageFor(model => model.DepartmentID)
        </div>
                </label>
            <label>

        <div class="editor-label">
            @Html.LabelFor(model => model.DemandDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DemandDate)
            @Html.ValidationMessageFor(model => model.DemandDate)
        </div>
                </label>
            <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.DemandOfficer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DemandOfficer)
            @Html.ValidationMessageFor(model => model.DemandOfficer)
        </div>
                </label>
            </div>

        <div class="well well-small" id="Add-Item">
         
            @Html.ActionLink("Add Items", "DemandItemList", null, new { @class = "addProductItem btn btn-primary"})
          <br /><br />
            <table id="tblotm" style="width:650px;margin-left:20px">
                  <tr>
                      <td class="span5 pagination-centered" style="border:none">Category</td>
                      <td class="span5 pagination-centered" style="border:none">Sub Category</td>
                      <td class="span5 pagination-centered" style="border:none">Item Name</td>
                      <td class="span5 pagination-centered" style="border:none">Quantity</td>
                      
                  </tr>
               </table><table>
                    @try
                    {
                        foreach (var item in Model.StockItemEntryList)
                        {
                        
                     <tr>
                         @Html.Partial("DemandItemList", item)
                    </tr>
                        }
                    }
                    catch { }
                   
            </table>
        </div>

        <p>
            <input type="submit" value="Save"/>
            
        </p>
    </fieldset>
        </div>
}

    <div ><span id="linkNewBack"> @Html.ActionLink("Back to List", "Index")</span></div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.row").remove();

    });

</script>
<script type="text/javascript">


    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockSubCategoryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetSubCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.SubCategoryId', function () {
        var id = this.id;

        id = id.replace("__StockSubCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemName/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemNameByCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });

    </script>