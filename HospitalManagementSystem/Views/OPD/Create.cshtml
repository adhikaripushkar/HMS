@model HospitalManagementSystem.Models.OpdModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_OpdLayOut.cshtml";
    bool IsSelfBilling = HospitalManagementSystem.Utility.IsSelfBillingDepartmentTrue();
    
}

<style>
    select {
        width: 208px;
        height: 27px;
    }
</style>


<style>
    table#mytbl,
    table#mytbl td {
        width: 880px;
        border: none !important;
    }
</style>



<style>
    .ddpsize {
        width: 211px;
        height: 27px;
    }

    .ddpsizeSmall {
        width: 65px;
        height: 27px;
    }
</style>

<script src="~/Scripts/OrderManagerScript.js"></script>
<script>
    $(function () {
        $('#IsMember').css('border', '2px solid blue');
        $('#IsMember').focus();

    });

    $("#IsMember").live("focusout", function (e) {
        $('#IsMember').css('border', '0px');

    });

</script>

<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();
        $('#RegistrationDate').val("");
    });

</script>


<script>
    var dateP = $.noConflict();
    dateP(function () {
        dateP("#RegistrationDate").attr("value", "@DateTime.Now.ToShortDateString()");
        dateP("#RegistrationDate").datepicker();

    });
</script>



<h2 style="text-align: center;">OPD Department@{
    if (Session["OpdTypeIdInt"] != null)
    {
        if ((int)Session["OpdTypeIdInt"] == 1)
        {
    @:<span style="color:#8cb4c8;font-size:12px;">(General)</span>
            }
        else
        {
    @:<span style="color:#8cb4c8;font-size:12px;">(Payable)</span>
            }
    }

    else
    {
    @:<span style="color:#8cb4c8;font-size:12px;">(General)</span>
        }
}

</h2>

<div class="contentWrapper">

    @using (Html.BeginForm("Create", "Opd", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.OpdID)
        <fieldset>
            <legend></legend>
            <h4>Is Member</h4>
            @Html.HiddenFor(model => model.OpdFeeDetailsModel.FeeTaxAmount)
            @Html.HiddenFor(model => model.OpdFeeDetailsModel.RegistrationFeeOnly)

            <span style="width: 211px; height: 27px;">@Html.DropDownListFor(model => model.IsMember, HospitalManagementSystem.Utility.GetOpdSearchDDLCrt(), new { @class = "srchValcls" })</span>
            
            <div id="memsrch"></div>

            <hr />

            <div class="row-fluid singleline">

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.PatientTitle)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PatientTitle)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.PatientTitle, HospitalManagementSystem.Utility.GetPatientTitle(), new { @class = "ddpsize" })

                    </div>

                </label>



                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.FirstName)</span>
                    <div class="editor-label">
                        First Name ***
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.FirstName)

                    </div>

                </label>


                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.MiddleName)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MiddleName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.MiddleName)

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.LastName)</span>
                    <div class="editor-label">
                        Last Name ***
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.LastName)

                    </div>

                </label>
            </div>

            <div class="row-fluid singleline">

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Sex)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Sex)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Sex, HospitalManagementSystem.Utility.GetGenderList(), new { @class = "ddpsize" })

                    </div>

                </label>


                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.AgeYear)</span>
                    <div class="editor-label">
                        Age ***
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.AgeYear)

                    </div>
                </label>


                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.AgeMonth)</div>
                    <div class="editor-label">
                        @*@Html.LabelFor(model => model.BillingCounterPatientInformationModel.Age)*@
                        @Html.Label("Age Type **")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.AgeMonth, HospitalManagementSystem.Utility.GetPatientAgeType(), new { @id = "AgeType" } @*new { @readonly = "readolny" }*@)
                    </div>

                </label>






                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.BloodGroup)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.BloodGroup)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.BloodGroup, HospitalManagementSystem.Utility.BloodGroupList(), "select", new { @class = "ddpsize" })

                    </div>
                </label>





                <label>

                    @*<span class="size">@Html.ValidationMessageFor(model => model.RegistrationMode)</span>*@
                    <div class="editor-label">
                        @Html.HiddenFor(model => model.RegistrationMode)
                    </div>
                    <div class="editor-field">
                        @Html.HiddenFor(model => model.RegistrationMode, HospitalManagementSystem.Utility.RegistrationModeList())

                    </div>

                </label>


            </div>





            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.MaritalStatus)</span>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.MaritalStatus)
                    </div>

                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.MaritalStatus, HospitalManagementSystem.Utility.MatitalStatusList(), new { @class = "ddpsize" })

                    </div>
                </label>


                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.ContactName)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ContactName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ContactName)

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.MobileNumber)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MobileNumber)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.MobileNumber)

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Email)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Email)
                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Email)
                    </div>

                </label>
            </div>
            <div class="row-fluid singleline">

                @*Edited By Pushkar*@
                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.CountryID)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CountryID)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.CountryID, HospitalManagementSystem.Utility.GetCountryNameList(), new { @id = "CountryID" })
                    </div>

                </label>

                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.ZoneId)</div>
                    <div class="editor-label">
                        Select Zone
                        @*@Html.LabelFor(model => model.ZoneId)*@
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ZoneId, HospitalManagementSystem.Utility.GetZoneList(),"----Select----", new { @id = "ZoneId" })
                    </div>

                </label>
               
                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.DistrictID)</div>
                    <div class="editor-label">
                       Select Disctrict
                    </div>
                    <div class="editor-field">
                       @Html.DropDownListFor(model => model.DistrictID, HospitalManagementSystem.Utility.GetDistrictList(), new {@onchange = "JqueryAjaxLoadSelectOption(this.value,'vdcID','/AjaxRequest/GetlistofVDC/')" })
                    </div>

                </label>

                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.vdcID)</div>
                    <div class="editor-label">
                      Select VDC
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.vdcID, HospitalManagementSystem.Utility.GetVdc1(), new { @id = "vdcID"})
                      
            </div>
                </label>
            </div>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Address)</span>

                    <div class="editor-label">
                        Ward No: ***
                    </div>

                    <div class="editor-field">

                        @Html.TextBoxFor(mod => mod.Address)

                    </div>
                </label>
                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.ReferId)</div>
                    <div class="editor-label">
                        Out Refer
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ReferId, HospitalManagementSystem.Utility.GetOutRefer(), "Select--One", new{})
                    </div>
                </label>
                @*<label>
                    <span class="size">@Html.ValidationMessageFor(model => model.RegistrationDate)</span>

                    <div class="editor-label">
                        Registration Date **
                    </div>

                    <div class="editor-field">

                        @Html.TextBoxFor(mod => mod.RegistrationDate)

                    </div>
                </label>*@
            
        </fieldset>
        
        <fieldset>
            <legend>Doctor Selection</legend>
            <div class="well well-small" id="Add-Item">
                @*@Html.ActionLink("Add More", "AddDoctorList", null, new { @class = "addProductItem btn btn-primary" })*@
                <table id="mytbl">
                    <tr>
                        <td>&nbsp;&nbsp;&nbsp;&nbsp;Department</td>
                        <td>Doctor</td>
                        <td>Prefer Date</td>
                        <td>Prefer Time</td>

                    </tr>


                </table>
                @foreach (var item in Model.OpdDoctorList)
                {
                    
                    @Html.Partial("AddDoctorList", item)
                    
                }
            </div>
        </fieldset>
        
        
        <fieldset>
            @if (IsSelfBilling)
            {
                <legend>Bill Details</legend>
                <div class="row-fluid singleline">
                    <label>
                        <span class="size"></span>
                        <div class="editor-label">
                            @Html.Label("Registration")
                        </div>
                        <div class="editor-field">
                            @*@Html.DropDownListFor(model => model.OldOrNewRegistration, HospitalManagementSystem.Utility.GetRegistrationMode(), "Select--One", new { onchange="GetRegistrationModeDetails()"})*@
                            @Html.DropDownListFor(model => model.OldOrNewRegistration, HospitalManagementSystem.Utility.GetFeeType(), "Select--One", new { onchange = "GetRegistrationModeDetails()" })
                        </div>
                    </label>

                    <label>
                        <span class="size"></span>
                        <div class="editor-label">
                            @Html.Label("Other Discount")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.OtherDiscountID, HospitalManagementSystem.Utility.GetOtherDiscountForDropDown(), "Select--One", new { onchange = "getOtherDiscountPercentage()" })
                        </div>
                    </label>
                </div>

                <div class="row-fluid singleline">
                    <label>
                        <span class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.RegistrationFee)*@</span>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.RegistrationFee)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.RegistrationFee, new { @id = "txtRegistrationFee", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>
                    </label>

                    <label>
                        <span class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.DoctorFee)</span>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.DoctorFee)
                        </div>

                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.DoctorFee, new { @id = "txtDoctorFee", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>

                    </label>

                    @*<label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)</div>
                        <div class="editor-label">
                          Health Tax(%)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TaxAmount, new { @id = "txtTaxAmount", @onkeyup = "onchangeevent();" })

                        </div>

                    </label>*@
                    @*Edited By Pushkar*@
                    @*<label>*@
                    @*<div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)</div>*@
                    @*<div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)
                            Tax (%)
                        </div>*@
                    @*<div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.FeeTaxAmount, new { @onkeyup = "onchangeevent();" })

                        </div>*@

                    @*</label>*@



                    <label>
                        <div class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount)*@</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount, new { @id = "txtOtherDiscountAmount", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>
                    </label>

                </div>

                <div class="row-fluid singleline">
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.TotalAmount)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.TotalAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TotalAmount, new { @id = "txtTotalAmount", @readonly = "readonly" })
                            @*<input type="text" id="txtTotalAmount" value="@Model.OpdFeeDetailsModel.RegistrationFee" />*@
                        </div>
                    </label>
                    @*//Edited By Pushkar
                    <label>
                        <div class="size">
                            <div class="editor-label">
                           
                            Tax (%)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TaxAmount, new { @id = "txtTaxAmount", @onkeyup = "onchangeevent();" })

                        </div>
                      

                    </label>
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.TotalAmountWithTax)</div>

                        <div class="editor-label">
                           
                            Total Amount With Tax
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TotalAmountWithTax, new { @id = "txtTotalAmountwithTax", @readonly = "readonly" })

                        </div>
                    </label>*@


                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.Tender)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.Tender)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.Tender, new { @id = "tender", @Value = "" })

                        </div>
                    </label>
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.ReturnAmount)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.ReturnAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.ReturnAmount, new { @id = "rtamt", @Value = "", @readonly = "readonly" })
                            @*<input type="text" id="txtTotalAmount" value="@Model.OpdFeeDetailsModel.RegistrationFee" />*@
                        </div>
                    </label>

                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.Remarks)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.Remarks)
                        </div>
                        <div class="editor-field">
                            @*   ,new { @required = "@required" ,@onkeyup = "JqueryAjaxDeletePatientDoctor(this.value,'IDHERE','/AjaxRequest/TEST/')" }*@
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.Remarks)

                        </div>


                    </label>

                </div>

            }

            else
            {
                
                <legend>Bill Details</legend>
                <div class="row-fluid singleline">
                    <label>
                        <span class="size"></span>
                        <div class="editor-label">
                            @Html.Label("Other Discount")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.OtherDiscountID, HospitalManagementSystem.Utility.GetOtherDiscountForDropDown(), "Select--One", new { onchange = "getOtherDiscountPercentage()", @readonly = "readonly" })

                        </div>
                    </label>
                </div>

                <div class="row-fluid singleline">
                    <label>
                        <span class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.RegistrationFee)*@</span>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.RegistrationFee)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.RegistrationFee, new { @id = "txtRegistrationFee", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>
                    </label>

                    <label>
                        <span class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.DoctorFee)*@</span>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.DoctorFee)
                        </div>

                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.DoctorFee, new { @id = "txtDoctorFee", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>

                    </label>

                    <label>
                        <div class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)*@</div>
                        <div class="editor-label">
                            @*@Html.LabelFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)*@
                            @*Member Discount(%)*@
                            Member Tax(%)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TaxAmount, new { @id = "txtTaxAmount", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>

                    </label>




                    <label>
                        <div class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount)*@</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount, new { @id = "txtOtherDiscountAmount", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                        </div>
                    </label>

                </div>

                <div class="row-fluid singleline">
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.TotalAmount)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.TotalAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TotalAmount, new { @id = "txtTotalAmount", @readonly = "readonly" })
                            @*<input type="text" id="txtTotalAmount" value="@Model.OpdFeeDetailsModel.RegistrationFee" />*@
                        </div>
                    </label>


                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.Remarks)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.OpdFeeDetailsModel.Remarks)
                        </div>
                        <div class="editor-field">
                            @*   ,new { @required = "@required" ,@onkeyup = "JqueryAjaxDeletePatientDoctor(this.value,'IDHERE','/AjaxRequest/TEST/')" }*@
                            @Html.TextBoxFor(model => model.OpdFeeDetailsModel.Remarks, new { @readonly = "readonly" })

                        </div>


                    </label>

                </div>

            }
        </fieldset>
        <div>
            <p>
                <input type="submit" value="Create" id="BtnSubmit" />
            </p>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
    </div>

</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    function GetRegistrationModeDetails() {
        var RegModeId = $("#OldOrNewRegistration").val();
        $.ajax({
            url: "@Url.Action("NewoldRegistration", "AjaxRequest")",
            data: { Id: RegModeId },
            dataType: "json",
            type: "POST",
            error: function () {
                alert("An error occurred.");
            },
            success: function (data) {


                $("#txtRegistrationFee").val(parseFloat(data));
                $("#txtTotalAmount").val(parseFloat(data));
                $("#rtamt").val(parseFloat(data));
                //$("#txtTotalAmountwithTax").val(parseFloat(data))
            }
        })
    }


</script>
<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.rowr").remove();
    });

</script>

<script type="text/javascript">

    $("#Add-Item").on('change', '.DepartmentID', function () {
        var id = this.id;

        id = id.replace("__DepartmentID", "__DoctorID");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetDoctorNameList/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });

</script>

<script type="text/javascript">
    function JqueryAjaxDeletePatientDoctor(selvalue, targetElm, url) {
        $.ajax({
            async: false,
            type: "POST",
            url: url,
            contentType: "text/json",

            beforeSend: function () {
                $("#" + targetElm).attr('disabled', 'disabled');
                $("#" + targetElm).addClass('ac_loading');
            },
            success: function (jsonResult) {
                $("#IDHERE").val(jsonResult);
            }
        });
    }
</script>
<script type="text/javascript">
    var j = $.noConflict();
    function JqueryAjaxLoadSelectOption(selValue, targetElm, url) {
        j.ajax({
            async: false,
            type: "POST",
            url: url + selValue,
            contentType: "text/json",
            data: ({ id: selValue }),
            beforeSend: function () {
                $("#" + targetElm).attr('disabled', 'disabled');
                $("#" + targetElm).addClass('ac_loading'); },
            success: function (jsonResult) {
                var evlResult = JSON.retrocycle(jsonResult);
                var selOption = "";
                selOption = ParseJsonResultForSelectOptions(evlResult);
                tempTargetElm = targetElm.split(',');
                for (var i = 0; i < tempTargetElm.length; i++) {
                    // alert(tempTargetElm.length + " : " + tempTargetElm[i]);
                    j("#" + tempTargetElm[i]).empty().append(selOption);
                    j("#" + tempTargetElm[i]).removeClass('ac_loading');
                    j("#" + tempTargetElm[i]).removeAttr('disabled');
                }},
            error: function (jsonResult) {
            }
        });
        function ParseJsonResultForSelectOptions(evlResult) {
            var selOption = "";
            j.each(evlResult, function (key, item) {
                var isSelected = (item['Selected'] == "true") ? "Selected='Selected'" : "";
                var otherAttrib = "";
                $.each(item, function (name, value) {
                    if (name != 'Selected' && name != 'Value' && name != 'Text') {
                        otherAttrib += " " + name + '="' + value + '" ';
                    }});
                selOption += "<option value='" + item['Value'] + "' " + isSelected + " " + otherAttrib + " >"
                + evlResult[key].Text + "</option>";
            });
            return selOption;
        }}
</script>
<script type="text/javascript">

    function onchangeevent() {

        var vartxtRegistrationFee = $("#txtRegistrationFee").val();
        var vartxtDoctorFee = $("#txtDoctorFee").val();

        var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
        //var vartxtTaxAmount = $("#txtTaxAmount").val();
        var vartxtMemberDiscountAmount = $("#txtMemberDiscountAmount").val();
        var vartxtTotalAmountAfterDiscount = $("#txtTotalAmountAfterDiscount").val();
        var vartxtTotalAmount = $("#txtTotalAmount").val();



        var varTotal = 0;
        var varDiscount = 0;


        if (vartxtRegistrationFee == '') {
            vartxtRegistrationFee = 0;
        }
        if (vartxtDoctorFee == '') {
            vartxtDoctorFee = 0;
        }
        if (vartxtTotalAmountAfterDiscount == '') {
            vartxtTotalAmountAfterDiscount = 0;
        }
        //if (vartxtTaxAmount == '') {
        //    vartxtTaxAmount = 0;
        //}

        if (vartxtOtherDiscountAmount == '') {
            vartxtOtherDiscountAmount = 0;
        }

        if (vartxtTotalAmount == '') {

            vartxtTotalAmount = 0;
        }

        //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);


        varTotal = parseFloat(vartxtRegistrationFee) + parseFloat(vartxtDoctorFee);
        var MemdiscAmt = parseFloat(vartxtTotalAmount) * parseFloat(vartxtMemberDiscountAmount) / 100;


        varDiscount = parseFloat(vartxtOtherDiscountAmount);
        var varTotalAmount1 = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);

        var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
        //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount) + parseFloat(TaxAmt
        var varTotalAmount = parseFloat(varTotalAmount1) + parseFloat(TaxAmt);
        //var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
        if (varTotalAmount < 0) {
            $("#txtTotalAmount").val(0);
        }
        else {
            $("#txtTotalAmount").val(parseFloat(varTotalAmount.toFixed(2)));
        }

    }
</script>




<script>

    var dlg = $.noConflict();

    dlg('.srchValcls').change(function (e) {

        e.preventDefault();

        if (this.value == "") {

            window.location = "/Opd/Create";

        }
        else {

            var val = dlg('.srchValcls').val();

            var url = "/Opd/_SearchOption";

            dlg.get(url, null, function (data) {


                dlg('#memsrch').html(data);

                dlg(function () {

                    dlg("#memsrch").dialog({
                        position: [290, 190],
                        resizable: true,
                        overFlow: scroll,
                        minWidth: 1000,
                        maxWidth: 1000,
                        maxHeight: 200,


                        title: "Search Member Ship",

                        close: function () {

                            window.location = "/Opd/Create";

                        }

                    });

                });


            });

        }
    });





</script>

<script>
    function getOtherDiscountPercentage() {
        var otherDisAmount = $("#OtherDiscountID").val();

        if (otherDisAmount == null || otherDisAmount == "") {

            var vartxtRegistrationFee = $("#txtRegistrationFee").val();
            var vartxtDoctorFee = $("#txtDoctorFee").val();
            var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
            var vartxtTaxAmount = $("#txtTaxAmount").val();
            var vartxtTotalAmountAfterDiscount = $("#txtTotalAmountAfterDiscount").val();
            var vartxtTotalAmount = $("#txtTotalAmount").val();

            var varTotal = 0;
            var varDiscount = 0;


            if (vartxtRegistrationFee == '') {
                vartxtRegistrationFee = 0;
            }
            if (vartxtDoctorFee == '') {
                vartxtDoctorFee = 0;
            }
            if (vartxtTaxAmount == '') {
                vartxtTaxAmount = 0;
            }

            if (vartxtOtherDiscountAmount == '') {
                vartxtOtherDiscountAmount = 0;
            }
            if (vartxtTotalAmountAfterDiscount == '') {
                vartxtTotalAmountAfterDiscount = 0;
            }


            if (vartxtTotalAmount == '') {

                vartxtTotalAmount = 0;
            }

            $('#txtOtherDiscountAmount').val(0);
            vartxtOtherDiscountAmount = 0;

            varTotal = parseFloat(vartxtRegistrationFee) + parseFloat(vartxtDoctorFee);


            varDiscount = parseFloat(vartxtOtherDiscountAmount);
            var varTotalAmount1 = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);

            var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
            //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount) + parseFloat(TaxAmt
            var varTotalAmount = parseFloat(varTotalAmount1) + parseFloat(TaxAmt);

            if (varTotalAmount < 0) {
                $("#txtTotalAmount").val(0);
            }
            else {
                $("#txtTotalAmount").val(parseFloat(varTotalAmount.toFixed(2)));
            }

            //if (otherDisAmount == "") {
            //    $("#txtOtherDiscountAmount").val(0);
            //    return;
        }


        var RegModeId = $("#OldOrNewRegistration").val();
        var url = "/AjaxRequest/GetOtherDiscountAmtFinal/";
        $.ajax({
            async: false,
            type: "POST",
            url: url + otherDisAmount + "?id2=" + RegModeId,

            contentType: "text/json",

            beforeSend: function () {
            },
            success: function (jsonResult) {
                $("#txtOtherDiscountAmount").val(jsonResult);


                var vartxtRegistrationFee = $("#txtRegistrationFee").val();
                var vartxtDoctorFee = $("#txtDoctorFee").val();
                var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
                var vartxtTaxAmount = $("#txtTaxAmount").val();
                var vartxtTotalAmountAfterDiscount = $("#txtTotalAmountAfterDiscount").val();
                var vartxtTotalAmount = $("#txtTotalAmount").val();

                var varTotal = 0;
                var varDiscount = 0;


                if (vartxtRegistrationFee == '') {
                    vartxtRegistrationFee = 0;
                }
                if (vartxtDoctorFee == '') {
                    vartxtDoctorFee = 0;
                }
                if (vartxtTaxAmount == '') {
                    vartxtTaxAmount = 0;
                }


                if (vartxtOtherDiscountAmount == '') {
                    vartxtOtherDiscountAmount = 0;
                }

                if (vartxtTotalAmount == '') {

                    vartxtTotalAmount = 0;
                }


                varTotal = parseFloat(vartxtRegistrationFee) + parseFloat(vartxtDoctorFee);


                varDiscount = parseFloat(vartxtOtherDiscountAmount);
                var varTotalAmount1 = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);

                var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
                //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount) + parseFloat(TaxAmt
                var varTotalAmount = parseFloat(varTotalAmount1) + parseFloat(TaxAmt);

                if (varTotalAmount < 0) {
                    $("#txtTotalAmount").val(0);
                }
                else {
                    $("#txtTotalAmount").val(parseFloat(varTotalAmount.toFixed(2)));
                }


            }
        });
    }



</script>


<script>

    var j = jQuery.noConflict();
    j('.DoctorID').change(function (e) {
        e.preventDefault();
        $.get('/opd/GetDoctorFeeWithId/' + this.value,
        function (data) {

            var fee = parseInt(data);
            $('#txtDoctorFee').val(fee);
            var totalfee = $('#txtRegistrationFee').val();
            var totalfeeNew = parseInt(totalfee) + parseInt(fee);
            $('#txtTotalAmount').val(totalfeeNew);
            //var totalamountfee = $('#txtTotalAmount').val(totalfeeNew)
            //$("#txtMemberDiscountAmount").val(0);
            $("#txtOtherDiscountAmount").val(0);
            //$("#txtTotalAmountWithTax").val(0);
            $("#txtTaxAmount").val(0);
        });
    });

</script>
<script>

    var TAmt = jQuery.noConflict();
    TAmt("#tender").keyup(function () {

        var te = TAmt("#tender").val();

        var to = TAmt("#txtTotalAmount").val();

        var r = parseFloat(te) - parseFloat(to);
        TAmt("#rtamt").val(r);
    })
</script>
<script>
    var noc = jQuery.noConflict();
    noc("#tender").live("focusout", function (e) {
        noc('#BtnSubmit').focus();
        noc('#BtnSubmit').css('border', '3px solid yellow');
        noc('#BtnSubmit').css('padding', '6px');


    });
    noc("#BtnSubmit").live("focusout", function (e) {
        noc('#BtnSubmit').css('border', '0px');


    });

    noc("#linkNewBack").live("focusout", function (e) {
        noc('#BtnSubmit').focus();
        noc('#BtnSubmit').css('border', '3px solid yellow');
        noc('#BtnSubmit').css('padding', '6px');

    });



</script>
