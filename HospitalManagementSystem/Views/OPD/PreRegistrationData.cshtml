@model HospitalManagementSystem.Models.PreRegistrationModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_OpdLayOut.cshtml";
    bool IsSelfBilling = HospitalManagementSystem.Utility.IsSelfBillingDepartmentTrue();

}




<style>
    table#mytbl,
    table#mytbl td {
        width: 880px;
        border: none !important;
    }
</style>


<script>
    var j = $.noConflict();
    j(function () {
        j("#RegistrationDate").datepicker();

    });

</script>


@if (TempData["Failed"] == "0")
{
    <script type="text/javascript">

        alert('Insertion Failed Check Data Again!! ')

    </script>

}
<h2 style="text-align: center;">Pre-Registration To OPD</h2>

<div class="contentWrapper">
    <div class="bs-docs-example form-inline">
        @using (Html.BeginForm())
        {
       
            @Html.ValidationSummary(true)

            <fieldset>


                <div class="row-fluid singleline">

                    @Html.HiddenFor(model => model.PreRegistrationID)

                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.FirstName)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.FirstName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.FirstName)

                        </div>
                    </label>


                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.MiddleName)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.MiddleName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.MiddleName)

                        </div>
                    </label>

                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.LastName)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.LastName)

                        </div>
                    </label>

                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.Sex)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Sex)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.Sex, @HospitalManagementSystem.Utility.GetGenderList())

                        </div>
                    </label>



                </div>


                <div class="row-fluid singleline">
                    <label>
                        <span class="size">@Html.ValidationMessageFor(model => model.AgeYear)</span>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.AgeYear)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.AgeYear)

                        </div>
                    </label>
                    <label>

                        <div class="size">@Html.ValidationMessageFor(model => model.MobileNumber)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.MobileNumber)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.MobileNumber)

                        </div>
                    </label>


                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.ContactName)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ContactName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ContactName)

                        </div>
                    </label>
                    @*<label>
                        <div class="size">@Html.ValidationMessageFor(model => model.Address)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Address)
                           
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Address)

                        </div>
                    </label>*@
                </div>
                <div class="row-fluid singleline">
                    <label>

                        @*<div>@Html.ValidationMessageFor(model => model.RegistrationDate)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.RegistrationDate)
                        </div>*@
                        <div class="editor-field">
                            @Html.HiddenFor(model => model.RegistrationDate, "{0:dd:MM:yyyy}")
                        </div>

                    </label>
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.Email)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Email)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Email)

                        </div>

                    </label>

                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.RegistrationMode)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.RegistrationMode)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.RegistrationMode, @HospitalManagementSystem.Utility.RegistrationModeList())

                        </div>

                    </label>
                </div>
            </fieldset>
        <fieldset>
        <legend>Select Address Detail Field Here</legend>
                <div class="row-fluid singleline">
                    <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.ZoneId)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ZoneId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model=>model.ZoneId, @HospitalManagementSystem.Utility.GetZoneList())
                    </div>
                    </label>
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model=>model.DistrictID)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model=>model.DistrictID)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model=>model.DistrictID, @HospitalManagementSystem.Utility.GetDistrictList())
                        </div>
                    </label>
                    <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.vdcID)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.vdcID)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model=>model.vdcID, @HospitalManagementSystem.Utility.GetVdc1())
                            </div>
                    </label>
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.vdcID)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Address)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model=>model.Address)
                        </div>
                    </label>
                </div>
            </fieldset>
        
            <fieldset>
                <legend>Doctor Selection</legend>
                <div class="well well-small" id="Add-Item">

                    @*@Html.ActionLink("Add More", "AddDoctorList", null, new { @class = "addProductItem btn btn-primary" })*@
                    <table id="mytbl">
                        <tr>
                            <td>&nbsp;&nbsp;&nbsp;&nbsp;Department</td>
                            <td>Doctor</td>
                            <td>Prefer Date</td>
                            <td>Prefer Time</td>
                        </tr>
                    </table>
                    <table>
                        @foreach (var item in Model.OpdDoctorList)
                        {
                            <tr>
                                @Html.Partial("AddDoctorList", item)
                            </tr>
                        }

                    </table>
                </div>
            </fieldset>
            <fieldset>
                 @if (IsSelfBilling)
                 {
                <legend>Bill Details</legend>
               
                    <div class="row-fluid singleline">
                        <label>
                            <span class="size"></span>
                            <div class="editor-label">
                                @Html.Label("Registration")
                            </div>
                            <div class="editor-field">
                                @*@Html.DropDownListFor(model => model.OldOrNewRegistration, HospitalManagementSystem.Utility.GetRegistrationMode(), "Select--One", new { onchange="GetRegistrationModeDetails()"})*@
                                @Html.DropDownListFor(model => model.OldOrNewRegistration, HospitalManagementSystem.Utility.GetFeeType(), "Select--One", new { onchange = "GetRegistrationModeDetails()" })
                            </div>
                        </label>

                        <label>
                            <span class="size"></span>
                            <div class="editor-label">
                                @Html.Label("Other Discount")
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.OtherDiscountID, HospitalManagementSystem.Utility.GetOtherDiscountForDropDown(), "Select--One", new { onchange = "getOtherDiscountPercentage()" })
                            </div>
                        </label>
                    </div>

                    <div class="row-fluid singleline">
                        <label>
                            <span class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.RegistrationFee)*@</span>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OpdFeeDetailsModel.RegistrationFee)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.OpdFeeDetailsModel.RegistrationFee, new { @id = "txtRegistrationFee", @onkeyup = "onchangeevent();" })

                            </div>
                        </label>

                        <label>
                            <span class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.DoctorFee)*@</span>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OpdFeeDetailsModel.DoctorFee)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.OpdFeeDetailsModel.DoctorFee, new { @id = "txtDoctorFee", @onkeyup = "onchangeevent();" })

                            </div>

                        </label>

                        <label>
                            <div class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)*@</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.OpdFeeDetailsModel.MemberDiscountAmount, new { @id = "txtMemberDiscountAmount", @onkeyup = "onchangeevent();" })

                            </div>

                        </label>

                        @* <div class="editor-label">
            @Html.LabelFor(model => model.OpdFeeDetailsModel.OtherDiscountPercentage)
        </div>

        <div class="editor-field">
            @Html.EditorFor(model =>  model.OpdFeeDetailsModel.OtherDiscountPercentage)
            @Html.ValidationMessageFor(model =>  model.OpdFeeDetailsModel.OtherDiscountPercentage)
        </div>*@

                        <label>
                            <div class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount)*@</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.OpdFeeDetailsModel.OtherDiscountAmount, new { @id = "txtOtherDiscountAmount", @onkeyup = "onchangeevent();" })

                            </div>
                        </label>

                    </div>

                    <div class="row-fluid singleline">
                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.TotalAmount)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OpdFeeDetailsModel.TotalAmount)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.OpdFeeDetailsModel.TotalAmount, new { @id = "txtTotalAmount" })

                            </div>
                        </label>

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.Remarks)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.OpdFeeDetailsModel.Remarks)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(model => model.OpdFeeDetailsModel.Remarks)

                            </div>

                        </label>
                    </div>

                 }
            </fieldset>
                
    
            <input type="submit" value="Submit" />
    
    
    
    
            <script src="~/Scripts/jquery-1.7.1.min.js"></script>
            <script src="~/Scripts/jquery.validate.min.js"></script>
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
            <script src="~/Scripts/json.cycle.js"></script>
            <script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>

@*<script type="text/javascript">

                function onchangeevent() {
                    //$('#txtMiddleName').val($('#txtid').val + 3);
                    //var b = $("#textbox2").val();
                    //if ($("#txtMiddleName").is(":checked")) {
                    //}
                    // $("#txtMiddleName").hide();
                    // $("#txtMiddleName").show();
                    //var a = $("#txtid").val();
                    //var a = $("#txtid").val();
                    //var total = parseInt(a) + 2;
                    //$("#txtMiddleName").val(total);

                    var vartxtRegistrationFee = $("#txtRegistrationFee").val();
                    var vartxtDoctorFee = $("#txtDoctorFee").val();
                    var vartxtMemberDiscountAmount = $("#txtMemberDiscountAmount").val();
                    var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
                    var varTotal = 0;
                    var varDiscount = 0;

                    if (vartxtRegistrationFee == '') {
                        vartxtRegistrationFee = 0;
                    }
                    if (vartxtDoctorFee == '') {
                        vartxtDoctorFee = 0;
                    }
                    if (vartxtMemberDiscountAmount == '') {
                        vartxtMemberDiscountAmount = 0;
                    }
                    if (vartxtOtherDiscountAmount == '') {
                        vartxtOtherDiscountAmount = 0;
                    }
                    if (vartxtOtherDiscountAmount == '') {
                        vartxtOtherDiscountAmount = 0;
                    }
                    varTotal = parseInt(vartxtRegistrationFee) + parseInt(vartxtDoctorFee);

                    varDiscount = parseInt(vartxtMemberDiscountAmount) + parseInt(vartxtOtherDiscountAmount);
                    var varTotalAmount = parseInt(varTotal) - parseInt(varDiscount);
                    // alert(vartxtRegistrationFee);
                    $("#txtTotalAmount").val(varTotalAmount);
                }
            </script>*@
            <script type="text/javascript">

                function onchangeevent() {

                    var vartxtRegistrationFee = $("#txtRegistrationFee").val();
                    var vartxtDoctorFee = $("#txtDoctorFee").val();

                    var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
                    //var vartxtTaxAmount = $("#txtTaxAmount").val();
                    var vartxtMemberDiscountAmount = $("#txtMemberDiscountAmount").val();
                    var vartxtTotalAmountAfterDiscount = $("#txtTotalAmountAfterDiscount").val();
                    var vartxtTotalAmount = $("#txtTotalAmount").val();



                    var varTotal = 0;
                    var varDiscount = 0;


                    if (vartxtRegistrationFee == '') {
                        vartxtRegistrationFee = 0;
                    }
                    if (vartxtDoctorFee == '') {
                        vartxtDoctorFee = 0;
                    }
                    if (vartxtTotalAmountAfterDiscount == '') {
                        vartxtTotalAmountAfterDiscount = 0;
                    }
                    //if (vartxtTaxAmount == '') {
                    //    vartxtTaxAmount = 0;
                    //}

                    if (vartxtOtherDiscountAmount == '') {
                        vartxtOtherDiscountAmount = 0;
                    }

                    if (vartxtTotalAmount == '') {

                        vartxtTotalAmount = 0;
                    }

                    //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);


                    varTotal = parseFloat(vartxtRegistrationFee) + parseFloat(vartxtDoctorFee);
                    var MemdiscAmt = parseFloat(vartxtTotalAmount) * parseFloat(vartxtMemberDiscountAmount) / 100;


                    varDiscount = parseFloat(vartxtOtherDiscountAmount);
                    var varTotalAmount1 = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);

                    var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
                    //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount) + parseFloat(TaxAmt
                    var varTotalAmount = parseFloat(varTotalAmount1) + parseFloat(TaxAmt);
                    //var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
                    if (varTotalAmount < 0) {
                        $("#txtTotalAmount").val(0);
                    }
                    else {
                        $("#txtTotalAmount").val(parseFloat(varTotalAmount.toFixed(2)));
                    }

                }
            </script>
            
            <script>

                function GetRegistrationModeDetails() {
                    var RegModeId = $("#OldOrNewRegistration").val();
                    $.ajax({
                        url: "@Url.Action("NewoldRegistration", "AjaxRequest")",
                        data: { Id: RegModeId },
                        dataType: "json",
                        type: "POST",
                        error: function () {
                            alert("An error occurred.");
                        },
                        success: function (data) {


                            $("#txtRegistrationFee").val(parseFloat(data));
                            $("#txtTotalAmount").val(parseFloat(data));
                            //$("#txtTotalAmountwithTax").val(parseFloat(data))
                        }
                    })
                }
               </script>

                <script type="text/javascript">

                    $(document).ready(function () {
                        AddClickEvents();
                    });
            </script>


            <script type="text/javascript">
                $("#Add-Item").on('click', '.row-button', function () {

                    $(this).closest("div.row").remove();
                });

            </script>

            <script type="text/javascript">

                $("#Add-Item").on('change', '.DepartmentID', function () {
                    var id = this.id;

                    id = id.replace("__DepartmentID", "__DoctorID");

                    $('#' + id).val('');


                    $.get('/AjaxRequest/GetDoctorNameList/' + this.value,
                          function (data) {
                              $('#' + id).find('option').remove()
                              $(data).each(
                                  function (index, item) {
                                      $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                                  });
                          }
                );
                });

            </script>



            <script type="text/javascript">

                function JqueryAjaxLoadSelectOption(selValue, targetElm, url) {

                    $.ajax({
                        async: false,
                        type: "POST",
                        url: url + selValue,
                        contentType: "text/json",
                        data: ({ id: selValue }),
                        beforeSend: function () {
                            $("#" + targetElm).attr('disabled', 'disabled');
                            $("#" + targetElm).addClass('ac_loading');
                        },

                        success: function (jsonResult) {

                            var evlResult = JSON.retrocycle(jsonResult);
                            var selOption = "";
                            selOption = ParseJsonResultForSelectOptions(evlResult);

                            tempTargetElm = targetElm.split(',');
                            for (var i = 0; i < tempTargetElm.length; i++) {

                                $("#" + tempTargetElm[i]).empty().append(selOption);
                                $("#" + tempTargetElm[i]).removeClass('ac_loading');
                                $("#" + tempTargetElm[i]).removeAttr('disabled');
                            }


                        },
                        error: function (jsonResult) {
                        }
                    });

                    function ParseJsonResultForSelectOptions(evlResult) {
                        var selOption = "";
                        $.each(evlResult, function (key, item) {
                            var isSelected = (item['Selected'] == "true") ? "Selected='Selected'" : "";
                            //var otherAttrib = (item['Attribs']!=undefined)? item['Attribs']:"";
                            var otherAttrib = "";
                            $.each(item, function (name, value) {
                                if (name != 'Selected' && name != 'Value' && name != 'Text') {
                                    otherAttrib += " " + name + '="' + value + '" ';
                                }
                            });
                            selOption += "<option value='" + item['Value'] + "' " + isSelected + " " + otherAttrib + " >"
                            + evlResult[key].Text + "</option>";
                        });
                        return selOption;
                    }

                }
            </script>@*
            <script>
                function getOtherDiscountPercentage() {
                    var otherDisAmount = $("OtherDiscountID").val();
                    if (otherDisAmount == null || otherDisAmount == "")
                    {
                        var vartxtRegistrationFee = $("#txtRegistrationFee").val();
                        var vartxtDoctorFee = $("#txtDoctorFee").val();
                        var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
                        var vartxtTaxAmount = $("#txtTaxAmount").val();
                        var vartxtTotalAmountAfterDiscount = $("#txtTOtalAmountAfterDiscount").val();
                        var vartxtTotalAmount = $("txtTotalAmount").val();

                        var varTotal = 0;
                        var varDiscount = 0;

                        if (vartxtRegistrationFee == '') {
                            vartxtRegistrationFee = 0;
                        }
                        if (vartxtDoctorFee == '') {
                            vartxtDoctorFee = 0;
                        }
                        if (vartxtTaxAmount == '') {
                            vartxtTaxAmount = 0;
                        }
                        if()
                    }
                }
            </script>*@
            <script>
                function getOtherDiscountPercentage() {
                    var otherDisAmount = $("#OtherDiscountID").val();

                    if (otherDisAmount == null || otherDisAmount == "") {

                        var vartxtRegistrationFee = $("#txtRegistrationFee").val();
                        var vartxtDoctorFee = $("#txtDoctorFee").val();
                        var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
                        var vartxtTaxAmount = $("#txtTaxAmount").val();
                        var vartxtTotalAmountAfterDiscount = $("#txtTotalAmountAfterDiscount").val();
                        var vartxtTotalAmount = $("#txtTotalAmount").val();

                        var varTotal = 0;
                        var varDiscount = 0;


                        if (vartxtRegistrationFee == '') {
                            vartxtRegistrationFee = 0;
                        }
                        if (vartxtDoctorFee == '') {
                            vartxtDoctorFee = 0;
                        }
                        if (vartxtTaxAmount == '') {
                            vartxtTaxAmount = 0;
                        }

                        if (vartxtOtherDiscountAmount == '') {
                            vartxtOtherDiscountAmount = 0;
                        }
                        if (vartxtTotalAmountAfterDiscount == '') {
                            vartxtTotalAmountAfterDiscount = 0;
                        }


                        if (vartxtTotalAmount == '') {

                            vartxtTotalAmount = 0;
                        }

                        $('#txtOtherDiscountAmount').val(0);
                        vartxtOtherDiscountAmount = 0;

                        varTotal = parseFloat(vartxtRegistrationFee) + parseFloat(vartxtDoctorFee);


                        varDiscount = parseFloat(vartxtOtherDiscountAmount);
                        var varTotalAmount1 = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);

                        var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
                        //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount) + parseFloat(TaxAmt
                        var varTotalAmount = parseFloat(varTotalAmount1) + parseFloat(TaxAmt);

                        if (varTotalAmount < 0) {
                            $("#txtTotalAmount").val(0);
                        }
                        else {
                            $("#txtTotalAmount").val(parseFloat(varTotalAmount.toFixed(2)));
                        }

                        //if (otherDisAmount == "") {
                        //    $("#txtOtherDiscountAmount").val(0);
                        //    return;
                    }


                    var RegModeId = $("#OldOrNewRegistration").val();
                    var url = "/AjaxRequest/GetOtherDiscountAmtFinal/";
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: url + otherDisAmount + "?id2=" + RegModeId,

                        contentType: "text/json",

                        beforeSend: function () {
                        },
                        success: function (jsonResult) {
                            $("#txtOtherDiscountAmount").val(jsonResult);


                            var vartxtRegistrationFee = $("#txtRegistrationFee").val();
                            var vartxtDoctorFee = $("#txtDoctorFee").val();
                            var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
                            var vartxtTaxAmount = $("#txtTaxAmount").val();
                            var vartxtTotalAmountAfterDiscount = $("#txtTotalAmountAfterDiscount").val();
                            var vartxtTotalAmount = $("#txtTotalAmount").val();

                            var varTotal = 0;
                            var varDiscount = 0;


                            if (vartxtRegistrationFee == '') {
                                vartxtRegistrationFee = 0;
                            }
                            if (vartxtDoctorFee == '') {
                                vartxtDoctorFee = 0;
                            }
                            if (vartxtTaxAmount == '') {
                                vartxtTaxAmount = 0;
                            }


                            if (vartxtOtherDiscountAmount == '') {
                                vartxtOtherDiscountAmount = 0;
                            }

                            if (vartxtTotalAmount == '') {

                                vartxtTotalAmount = 0;
                            }


                            varTotal = parseFloat(vartxtRegistrationFee) + parseFloat(vartxtDoctorFee);


                            varDiscount = parseFloat(vartxtOtherDiscountAmount);
                            var varTotalAmount1 = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount);

                            var TaxAmt = parseFloat(varTotalAmount1) * 0.05;
                            //var varTotalAmount = parseFloat(varTotal) - parseFloat(vartxtOtherDiscountAmount) + parseFloat(TaxAmt
                            var varTotalAmount = parseFloat(varTotalAmount1) + parseFloat(TaxAmt);

                            if (varTotalAmount < 0) {
                                $("#txtTotalAmount").val(0);
                            }
                            else {
                                $("#txtTotalAmount").val(parseFloat(varTotalAmount.toFixed(2)));
                            }


                        }
                    });
                }



</script>
    

        }

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</div>
