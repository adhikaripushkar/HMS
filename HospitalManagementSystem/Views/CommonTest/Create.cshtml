@model HospitalManagementSystem.Models.CommonTestSetupModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_PathoAndRadiologyLayout.cshtml";
}

<h2 style="text-align:center;">Common Test Setup</h2>
<div class="contentWrapper">

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <div class="bs-docs-example form-inline">
    <fieldset>
        <legend>Create</legend>

       <div class="row-fluid singleline">

           <label>
               <div class="size">@Html.ValidationMessageFor(model => model.ExtraTestName)</div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ExtraTestName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExtraTestName)
            
        </div>
               </label>
           <label>
               <div class="size">@Html.ValidationMessageFor(model => model.Amount)</div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Amount,new { @id = "TstPriceId", @onkeyup = "onchangeevent();" })
            
        </div>
               </label>

           <label>
               <div class="size">@Html.ValidationMessageFor(model => model.Tax)</div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Tax)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Tax, new { @id = "TaxId", @onkeyup = "onchangeevent();" })
            
        </div>
</label>

            <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.TaxAmount)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.TaxAmount,new { @id = "TaxAmtid", @readonly = "readonly" })
            
            @Html.ValidationMessageFor(model => model.TaxAmount)
        </div>
</label>


          
           </div>

         <div class="row-fluid singleline">
         
            
          
             <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.TotalAmount)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.TotalAmount,new { @id = "txtTotalAmount", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.TotalAmount)
        </div>

                 </label>

             <label>

        <div class="editor-label">
            @Html.LabelFor(model => model.FiscalYearId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.FiscalYearId, HospitalManagementSystem.Utility.GetFiscalYearForDropDown())
            @Html.ValidationMessageFor(model => model.FiscalYearId)
        </div>

                 </label>
             
        

          

           

          

            <label>
                <div class="size">@Html.ValidationMessageFor(model => model.Status)</div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            
        </div>
                </label>
            </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
        </div>
}

<div id="linkNewBack">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

    <script type="text/javascript">

        function onchangeevent() {



            var testPriceFee = $("#TstPriceId").val();
            var vartxtTax = $("#TaxId").val();


            if (testPriceFee == '') {
                testPriceFee = 0;
            }
            if (vartxtTax == '') {
                vartxtTax = 0;
            }


            var vat = parseFloat(vartxtTax);

            var Totalpercentage = parseFloat(testPriceFee) * parseFloat(vat / 100);

            $("#TaxAmtid").val(Totalpercentage.toFixed(2));

            //var varTotalAmount = parseInt(vartxtHospitalFee) + parseInt(vartxtTax) + parseInt(vartxtVat);
            var varTotalAmount = parseFloat(testPriceFee) + parseFloat(Totalpercentage);
            var varTotalAmount = varTotalAmount.toFixed(2);
            $("#txtTotalAmount").val(varTotalAmount);



            //$("#Totalfee").val();

        }


</script>


    </div>