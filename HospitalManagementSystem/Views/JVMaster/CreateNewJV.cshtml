@model HospitalManagementSystem.Models.JVMasterModel

@{
    ViewBag.Title = "CreateNewJV";
    Layout = "~/Views/Shared/_BillingLayout.cshtml";
}
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/json.cycle.js"></script>
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>
@*<script src="~/Helpers/jquery.ui.autocomplete.selectFirst.js"></script>*@




<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();
    });

</script>

<div class="contentWrapper">

    <div class="bs-docs-example form-inline">

        @using (Html.BeginForm())
        {
           
              <div class="row-fluid singleline">

                <label>
                    <label style="width: 135px;">Voucher Type</label>
                    @Html.DropDownListFor(model => model.JvType, HospitalManagementSystem.Utility.GetVoucherType(), new { @class="JvType"})
                </label>
            </div>   
            
            <fieldset>

                <div class="well well-small" id="Add-Item">
                    @Html.ActionLink("Add More", "AddMoreParticulars", null, new { @class = "addProductItem btn btn-primary" })

                    <table id="particularTable" style="width: 100%;">
                        <tr>
                            <td class="span2" style="border: none; text-align: right;">DR/CR</td>
                            <td class="span6" style="border: none; text-align: center;">Particulars</td>
                            <td class="span6" style="border: none; text-align: center;">SubParticulars</td>
                            <td class="span6 pagination-centered" style="border: none;">DrAmount</td>
                            <td class="span6 pagination-centered" style="border: none; text-align: left;">CrAmount</td>
                        </tr>
                        <tr>
                            @foreach (var item in Model.AddMoreParticularsJVModelList)
                            {
                                @Html.Partial("AddMoreParticulars", item)                            
                            }
                        </tr>

                    </table>
            </fieldset>
            
            
            <div class="row-fluid singleline" style="margin-left: 326px;">
                <label>
                    @*<span class="size">@Html.ValidationMessageFor(model => model.ObjAddMoreParticularsJVModel.Narration)</span>*@
                    <div class="editor-label">
                        Total Dr Amount

                    </div>
                    <div class="editor-field">
                        @Html.TextBox("TotalDrAmountDiv", null, new { @readonly = "readonly" })
                    </div>
                </label>

                <label>
                    @*<span class="size">@Html.ValidationMessageFor(model => model.ObjAddMoreParticularsJVModel.Narration)</span>*@
                    <div class="editor-label">
                        Total Cr Amount

                    </div>
                    <div class="editor-field">
                        @Html.TextBox("TotalCrAmountDiv", null, new { @readonly = "readonly" })
                        @Html.HiddenFor(model => model.ObjAddMoreParticularsJVModel.CrAmountTotal, new { @id = "GTotal" })
                        @Html.HiddenFor(model => model.ObjAddMoreParticularsJVModel.DrAmountTotal, new { @id = "TTotal" })

                    </div>
                </label>
            </div>

            <div id="NarrationDtls">
                <div class="row-fluid singleline">
                    <label>
                        <span class="size">@Html.ValidationMessageFor(model => model.ObjAddMoreParticularsJVModel.Narration)</span>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ObjAddMoreParticularsJVModel.Narration)

                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.ObjAddMoreParticularsJVModel.Narration, new { @style = "width: 818px; height: 70px;" })
                        </div>
                    </label>
                </div>
            </div>
            <p>
                <input type="submit" value="Create" disabled="disabled" id="Savebtn" />
            </p>
        }
    </div>
</div>





<script type="text/javascript">

    $(".DrAmountClass").live("keyup", function () {

        CalculateTotalDrCrAmount();
    });
    $(".CrAmountClass").live("keyup", function () {
        CalculateTotalDrCrAmount();
    });

    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.row").remove();
        CalculateTotalDrCrAmount();
    });

    function CalculateTotalDrCrAmount() {
        var allDrSectors = $('.DrAmountClass'); //gets all elements that have class name as 'SectorFare'
        var allCrSectors = $('.CrAmountClass');
        //// Calculate Debit 
        var totalDrAmt = 0;
        var sectorDrCount = 0;
        sectorDrCount = $(allDrSectors).length;

        //// Calculate credit
        var totalCrAmt = 0;
        var sectorCrCount = 0;
        sectorCrCount = $(allCrSectors).length;

       for (var i = 0; i <= sectorDrCount - 1; i++) {
            if (isNaN(parseFloat($(allDrSectors[i]).val())))
                $(allDrSectors[i]).val('0');
            totalDrAmt += parseFloat($(allDrSectors[i]).val());
        }
        for (var i = 0; i <= sectorCrCount - 1; i++) {
            if (isNaN(parseFloat($(allCrSectors[i]).val())))
                $(allCrSectors[i]).val('0');

            totalCrAmt += parseFloat($(allCrSectors[i]).val());
        }


        $('#TotalCrAmountDiv').val('Rs: ' + totalCrAmt);
        $('#TotalDrAmountDiv').val('Rs: ' + totalDrAmt);

        $('#GTotal').val(totalCrAmt);
        $('#TTotal').val(totalDrAmt);

        //////////////////////////////////////////////////

        if (totalDrAmt == totalCrAmt && totalDrAmt>0) {
            $('#Savebtn').removeAttr("disabled");
            $('.redtxt').html('');
        }
        else {
            $('#Savebtn').attr('disabled', 'disabled');
            $('.redtxt').html('Please Check Debit and Credit');
        }
    };

    var dk = $.noConflict();
    dk(".AccGroupID").live("change", function (e) {
        e.preventDefault();
        var tr = dk(this).closest("tr");
        var ParentIDVal = tr.find(".ParentID").val();
        dk.get('/AjaxRequest/GetSubAccountHeadLeafList/' + this.value,
              function (data) {
                  tr.find(".ParentID").find('option').remove()
                  dk(data).each(
                      function (index, item) {
                          dk(".ParentID").append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });

    var dk = $.noConflict();
    dk(".firstinput").live("change", function (e) {
        e.preventDefault();
        var tr = dk(this).closest("tr");
        var ParentIDVal = tr.find(".AccGroupID").val();
        var TypeVal = tr.find(".firstinput").val();
        var JvVal = dk(".JvType").val();
        var JvValType = dk(".JvType");
        var DrVal = tr.find(".DrAmountClass");
        var CRVal = tr.find(".CrAmountClass");
        JvValType.attr("readonly", true);
        if (TypeVal == 1) {
            CRVal.attr("readonly", true);
            CRVal.val(0);
            DrVal.removeAttr('readonly');
                    }
        else if (TypeVal == 2) {
            DrVal.attr("readonly", true);
            DrVal.val(0);
            CRVal.removeAttr('readonly');
        }
        else {
            DrVal.attr("readonly", true);
            CRVal.attr("readonly", true);
            CRVal.val(0);
            DrVal.val(0);
        }
        $.post('@Url.Action("GetAccountHead4LevelList")', { DrCr: TypeVal, Jvtype: JvVal }, function (data) {
            tr.find(".AccGroupID").find('option').remove()
            dk(data).each(
                function (index, item) {
                    dk(".AccGroupID").append('<option value="' + item.Value + '">' + item.Text + '</option>')
                });
        })
    });

</script>



