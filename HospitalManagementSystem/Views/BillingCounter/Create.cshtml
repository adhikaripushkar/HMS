@model HospitalManagementSystem.Models.BillingCounterModel
@using HospitalManagementSystem.Helpers

@{
    ViewBag.Title = "Billing Counter";
    Layout = "~/Views/Shared/_BillingCounterLayout.cshtml";
    decimal? total = 0;
    decimal? totalDiscount = 0;
    decimal? totalFlatDiscount = 0;
    if (Model.TotalAmount != null && Model.TotalAmount > 0)
    {
        total = Model.TotalAmount;
    }

    if (Model.GrandTotalDiscount != null && Model.GrandTotalDiscount > 0)
    {
        totalDiscount = Model.GrandTotalDiscount;
    }

    if (Model.FlatDiscountAmount != null && Model.FlatDiscountAmount > 0)
    {
        totalFlatDiscount = Model.FlatDiscountAmount;
    }

    
    
}


<link href="~/Fontaw/css/font-awesome.min.css" rel="stylesheet" />

<style>
    #row-buttonadd {
        height: 26px;
        width: 30px;
        background-image: url(/Content/index.jpg);
        background-position: center center;
        background-repeat: no-repeat;
    }


    .background {
        background-color: pink;
    }

    #FirstName, #MiddleName, #LastName, #Address {
        text-transform: capitalize;
    }
</style>

<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery.ui.timepicker.css" rel="stylesheet" />
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery.ui.timepicker.js"></script>


@* //nepali datetimepicker *@

@Html.HiddenFor(x => x.BillingCounterPatientInformationModel.FirstName)

<style>
    table#mytbl td {
        width: 850px;
        border: none !important;
    }

    table#testdesign .clsdate {
        width: 150px;
    }

    table#testdesign .clstime {
        width: 150px;
    }

    table#testdesign .clssize {
        width: 150px;
    }
</style>

<style>
    select {
        width: 208px;
        height: 27px;
    }


    .title_box {
        border: #3c5a86 1px solid;
        padding-left: 15px;
    }

        .title_box #title {
            position: relative;
            top: -0.5em;
            margin-left: 1em;
            display: inline;
            background-color: #F5F5F5;
            font-size: 18px;
            color: blue;
        }

        .title_box #content {
        }

    .PatDetails {
        border: #3c5a86 1px dotted;
    }

    .title_box #PatDetailsTitle {
        position: relative;
        top: -0.5em;
        margin-left: 1em;
        display: inline;
        background-color: #F5F5F5;
        font-size: 18px;
        color: blue;
    }

    .title_box #ReferDocTitle {
        position: relative;
        top: -0.5em;
        margin-left: 1em;
        display: inline;
        background-color: #F5F5F5;
        font-size: 18px;
        color: blue;
    }


    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }
    /* IE 6 doesn't support max-height
* we use height instead, but this forces the menu to always be this tall
*/
    * html .ui-autocomplete {
        height: 100px;
    }
</style>

@if (TempData["failed"] != null)
{
    @TempData["failed"]
}
@if (ViewBag.listempty != null)
{
    @ViewBag.listempty;
}


<script>

    $(document).ready(function () {

        //$('.clsdate').val("");
        $('#TestRegistrationDate').val("");

        $("#TestRegistrationDate").attr("value", "@DateTime.Now.ToShortDateString()");
        //$(".clsdate").attr("value", "@DateTime.Now.ToShortDateString()");
        //$(".clstime").attr("value", "@DateTime.Now.ToString("HH:mm")");
    });

</script>

<script>
    var j = $.noConflict();
    j(function () {
        //j(".clsdate").datepicker();
        j("#TestRegistrationDate").datepicker();
        //j(".clstime").timepicker();

    });

</script>

<script src="~/Scripts/OrderManagerScript.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();
    });

</script>

<h3 style="text-align: center;">Billing Counter</h3>

<div class="contentWrapper">



    @using (Html.BeginForm("Create", "BillingCounter", FormMethod.Post, new { @class = "", @style = "", @id = "BillForm" }))
    {
        <div class="bs-docs-example form-inline">
            <span style="color: red">@ViewBag.message</span>

            @Html.ValidationSummary(true)

            <div>
                <fieldset>
                    <legend></legend>
                    @Html.RadioButton("rd", "1", true, new { @id = "rdnew", @onClick = "showHideDiv(1)" })
                    @Html.Label("New Registration")
                    @Html.RadioButton("rd", "2", false, new { @id = "rdold", @onClick = "showHideDiv(2)" })
                    @Html.Label("Old Registration")
                </fieldset>

            </div>

            <fieldset>
                <legend></legend>

                <div class="title_box" id="bill_to">
                    <div id="title">Search Patient</div>
                    <div class="row-fluid singleline">

                        <label>

                            <div class="size">@Html.ValidationMessageFor(model => model.PatientID)</div>

                            <div class="editor-label">
                                @Html.Label("Patient ID")
                            </div>

                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.BillingCounterPatientInformationModel.EmergencyMasterId, new { @id = "txtpatientName" })
                            </div>

                        </label>

                        <label>

                            <div class="size">@Html.ValidationMessageFor(model => model.MembershipId)</div>

                            <div class="editor-label">
                                @Html.Label("Membership ID")
                            </div>

                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.BillingCounterPatientInformationModel.MembershipId, new { @id = "txtMemembershipName" })
                            </div>

                        </label>


                        <label>
                            <span id="linkNewBack">@Html.ActionLink("Search", "Create", "BillingCounter", new { ipValue = "xxx", memebershipId = "yyy" }, new { @class = "linkb btn btn-warning" })</span>
                        </label>
                        <label>
                            <span id="lnSearchPatient">@Html.ActionLink("More..", "SeachPatient", "BillingCounter", new { @class = "linkf btn btn-warning" })</span>
                        </label>


                    </div>
                </div>
                <div id="memsrch"></div>
                <div class="title_box" id="PatDetails" style="margin-top: 16px;">
                    <div id="PatDetailsTitle">Patient Details</div>

                    <div class="row-fluid singleline">
                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.FirstName, "First Name")</div>
                            <div class="editor-label">
                                @Html.Label("First Name **")
                            </div>

                            <div class="editor-field">

                                @Html.TextBoxFor(m => Model.BillingCounterPatientInformationModel.FirstName, new { @id = "FirstName", @class = "m_title" })
                            </div>
                        </label>
                        <label>

                            <div class="editor-label">
                                @Html.Label("Middle Name")
                            </div>
                            <div>
                                @Html.TextBoxFor(m => Model.BillingCounterPatientInformationModel.MiddleName, new { @id = "MiddleName" })
                            </div>
                        </label>

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.LastName, "Last Name")</div>
                            <div class="editor-label">
                                @Html.Label("Last Name **")
                            </div>

                            <div>
                                @Html.TextBoxFor(m => Model.BillingCounterPatientInformationModel.LastName, new { @id = "LastName" })
                            </div>

                        </label>

                        @*<label>
                            @Html.HiddenFor(m => Model.BillingCounterPatientInformationModel.EmergencyMasterId, new { @id = "EmergencyMasterId" })
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.Address, "Address")</div>
                            <div class="editor-label">
                                @Html.Label("Address **")

                            </div>
                            <div>
                                @Html.TextBoxFor(m => Model.BillingCounterPatientInformationModel.Address, new { @id = "Address" })
                            </div>
                        </label>*@
                        <label>

                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.Gender)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.BillingCounterPatientInformationModel.Gender)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.Gender, HospitalManagementSystem.Utility.GetGenderList(), new { @id = "Gender" })
                            </div>

                        </label>

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.Age)</div>
                            <div class="editor-label">
                                @*@Html.LabelFor(model => model.BillingCounterPatientInformationModel.Age)*@
                                @Html.Label("Age **")
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.BillingCounterPatientInformationModel.Age, new { @id = "Age" } @*new { @readonly = "readolny" }*@)
                            </div>

                        </label>

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.AgeType)</div>
                            <div class="editor-label">
                                @*@Html.LabelFor(model => model.BillingCounterPatientInformationModel.Age)*@
                                @Html.Label("Age Type **")
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.AgeType, HospitalManagementSystem.Utility.GetPatientAgeType(), new { @id = "AgeType" } @*new { @readonly = "readolny" }*@)
                            </div>

                        </label>


                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.PhoneNo, "Invalid Mob No.")</div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.BillingCounterPatientInformationModel.PhoneNo)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.BillingCounterPatientInformationModel.PhoneNo, new { @id = "PhoneNo" } @*new { @readonly = "readolny" }*@)
                            </div>

                        </label>

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.CountryID)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.BillingCounterPatientInformationModel.CountryID)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.CountryID, HospitalManagementSystem.Utility.GetCountryNameList(), new { @id = "CountryID" })
                            </div>

                        </label>
                        @*Edited By Pushkar*@

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.ZoneId)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.BillingCounterPatientInformationModel.ZoneId)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.ZoneId, HospitalManagementSystem.Utility.GetZoneList(), new { @id = "ZoneId" })
                            </div>

                        </label>
                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.DistrictID)</div>
                            <div class="editor-label">
                                Select Disctrict
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.DistrictID, HospitalManagementSystem.Utility.GetDistrictList(), new { @onchange = "JqueryAjaxLoadSelectOption(this.value,'vdcID','/AjaxRequest/GetlistofVDC/')" })
                            </div>

                        </label>

                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.vdcID)</div>
                            <div class="editor-label">
                                Select VDC
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.vdcID, HospitalManagementSystem.Utility.GetVdc1(), new { @id="vdcID"})

                            </div>
                        </label>
                        @* <label>
                <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.DistrictID)</div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.BillingCounterPatientInformationModel.DistrictID)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.DistrictID, Hospital.Utility.GetDistrictList(), new { @id = "DisId" })
                </div>

            </label>
            <label>
                <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.vdcID)</div>
                <div class="editor-label">
                    Select VDC
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.BillingCounterPatientInformationModel.vdcID, Hospital.Utility.GetVdc1(), new { @id = "vdcID"})
                </div>
            </label>*@
                        <label>
                            @Html.HiddenFor(m => Model.BillingCounterPatientInformationModel.EmergencyMasterId, new { @id = "EmergencyMasterId" })
                            <div class="size">@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.Address, "Address")</div>
                            <div class="editor-label">
                                @*@Html.Label("Address **")*@
                                @Html.Label("Ward **")
                                @*where Address = ward for madhyapur hospital*@
                            </div>
                            <div>
                                @Html.TextBoxFor(m => Model.BillingCounterPatientInformationModel.Address, new { @id = "Address" })
                            </div>
                        </label>

                        <label>

                            <div class="size">@*@Html.ValidationMessageFor(model => model.BillingCounterPatientInformationModel.EmergencyMasterId)*@</div>
                            <div class="editor-label">
                                @Html.HiddenFor(model => model.BillingCounterPatientInformationModel.EmergencyMasterId)
                            </div>

                            <div class="editor-field">
                                @Html.HiddenFor(model => model.BillingCounterPatientInformationModel.EmergencyMasterId)
                            </div>
                        </label>


                        <div style="padding-left: 3px;">
                        </div>


                    </div>
                </div>
            </fieldset>

            <div class="row-fluid singleline">
                <div class="title_box" id="ReferDoc">
                    <div>
                        <label>
                            <div class="size">@Html.ValidationMessageFor(model => model.TestRegistrationDate)</div>

                            <div class="editor-label">
                                @Html.LabelFor(model => model.TestRegistrationDate)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.TestRegistrationDate)
                            </div>
                        </label>

                        @*<label>
                            <div class="size">@Html.ValidationMessageFor(model => model.ReferDoctorID)</div>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.ReferDoctorID)
                            </div>
                            <div class="editor-field">
                                @if (!string.IsNullOrEmpty(Session["emp_num"] as string))
                                {
                                    if ((int)Session["OpdTypeIdInt"] == 1)
                                    {
                               
                                    @Html.DropDownListFor(model => model.ReferDoctorID, Hospital.Utility.GetDoctors().Where(x => x.Text == "Unit"), new { @class = "DoctorID" })
                                    }
                                    else
                                    {                                
                                    @Html.DropDownListFor(model => model.ReferDoctorID, Hospital.Utility.GetDoctors().Where(x => x.Text != "Unit"), new { @class = "DoctorID" }) 
                                    }
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.ReferDoctorID, Hospital.Utility.GetDoctors(), new { @class = "DoctorID" }) 
                                }
                            </div>

                        </label>*@

                    </div>
                    <br />
                </div>
                <br />
            </div>

            <div style="margin-top: -30px;">

                <fieldset>
                    <legend></legend>
                    <h3>Choose Services</h3>
                    <div class="well well-small" id="Add-Item" style="position: relative;">

                        <table id="particularTable" style="width: 100%;">
                            <tr>
                                @Html.ActionLink(" ", "AddMoreParticulars", null, new { @class = "addProductItem row-button", @id = "row-buttonadd", @style = " bottom: -27px; float: right; position: absolute; right: 0; margin-right: 1.2%; " })
                            </tr>
                            <tr class="one" style="color: #1c5183;">
                                <td>
                                    <span style="width: 6em;">Department</span>
                                </td>

                                <td>
                                    <span style="width: 8em; text-align: center;">Particular</span>

                                </td>
                                <td>
                                    <span style="width: 8em; text-align: center;">Refer Doctor</span>
                                </td>

                                <td>
                                    <span style="width: 4em; text-align: center;">Price</span>
                                </td>

                                @*<td style="text-align: right;">
                                    <span style="width: 3em;">&nbsp;&nbsp;&nbsp;&nbsp;Times</span>

                                </td>*@
                                <td style="text-align: center;">
                                    <span style="width: 4em;">Dis.In</span>

                                </td>

                                <td style="text-align: left; padding-left: 0px;">
                                    <span style="widows: 4em; padding-left: 0;">Per/Amount</span>
                                </td>


                                <td>
                                    <span style="width: 4em;">Rates</span>
                                </td>
                                <td>
                                    <span style="text-align: left;">Tax@5</span>
                                </td>

                                <td>
                                    <span style="width: 4em;">Total Price</span>

                                </td>

                                <td>
                                    <span style="width: 2em;">Dis(%)</span>

                                </td>
                                <td>
                                    <span style="width: 4em; text-align: left;">&nbsp;&nbsp;&nbsp;Dis.(Rs)</span>

                                </td>
                                <td style="text-align: right;">
                                    <span style="width: 4em;">Amount</span>
                                </td>
                                <td>

                                    <style>
                                        tr, td {
                                            border: none !important;
                                        }

                                        span {
                                            display: block;
                                            padding: 2px 4px;
                                        }
                                    </style>

                                    <span style="width: 30px;">Remove</span>
                                </td>
                            </tr>

                            <tr>


                                @foreach (var item in Model.BillingCounterNewTestListModelList)
                                {
                    

                                    @Html.Partial("AddMoreParticulars", item)
                          
                    
                                }
                            </tr>


                        </table>


                    </div>


                </fieldset>
            </div>
            <br />



            <div style="float: right; width: 55%;" class="bs-docs-example form-inline">

                <div style="float: left; padding-top: 0px;">

                    <div class="size"></div>
                    <div class="editor-label">
                        <span>Balance Deposit</span>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.BalanceDeposit, new { @id = "BalanceDeposit", @readonly = "readonly" })
                        @Html.HiddenFor(model => model.BalanceDeposit, new { @id = "HiddenBalanceDepositId", @readonly = "readonly" })
                    </div>


                    <div id="AddMoreDepo" style="display: none;">

                        <div id="currentDepoDivId">
                            <div class="editor-label">
                                <span>Deposit Remaining</span>
                            </div>
                            <div class="editor-field">
                                @Html.TextBox("RemainingDepo", null, new { @id = "RemainingDepo", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="editor-label">
                            <span>Add More Deposit</span>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(m => Model.Deposit, null, new { @id = "AddMoreDepoID", @onkeyup = "ExecuteDepoAmountNew();" })
                        </div>

                        <div class="editor-label">
                            <span>After Adding Deposit</span>
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("NewDepo", null, new { @readonly = "readoly" })
                        </div>


                    </div>
                </div>

                <table style="float: right;">



                    <tr>
                        <td>Total Price:</td>
                        <td>@Html.TextBoxFor(m => Model.TotalAmount, new { @id = "TotalAmountDiv", @Value = total, @readonly = "true" })</td>
                    </tr>
                    @*<tr>
                        <td>Flat Discount:</td>
                        <td>@Html.TextBoxFor(m => Model.FlatDiscountAmount, new { @id = "FlatDiscount", @Value = totalFlatDiscount })</td>
                    </tr>*@

                    <tr>
                        <td>Total Discount:</td>
                        <td>@Html.TextBoxFor(m => Model.GrandTotalDiscount, new { @id = "TotalDiscountDiv", @Value = totalDiscount, @readonly = "true" })</td>
                    </tr>

                    <tr>

                        <td>Payment Mode</td>
                        <td>@Html.DropDownList("PaymentMode", HospitalManagementSystem.Utility.GetPaymentMode(), new { @class = "PmodeClass" })</td>

                    </tr>


                    <tr id="rowTenderAmtId" style="">
                        <td>Tender Amount</td>
                        @*<td>@Html.TextBox("TenderAmountId", null, new { @onkeyup = "ExecuteTenderAmount();" })</td>*@
                        <td>@Html.TextBoxFor(m => Model.TenderAmount, null, new { @id = "TenderAmountId", @onkeyup = "ExecuteTenderAmount();" })</td>

                    </tr>


                    <tr id="rowReturnAmountId">
                        <td>Return Amount</td>
                        <td>@Html.TextBoxFor(m => m.ReturnedAmount, null, new { @readonly = "true", @id = "returnid" })</td>

                    </tr>

                    <tr>
                        @Html.HiddenFor(mod => mod.BillingCounterPatientInformationModel.AccountHeadId)
                    </tr>


                </table>

                @Html.Hidden("hduserid", HospitalManagementSystem.Utility.GetCurrentLoginUserId())
                <div style="display: none;">
                    User total usage: <span id="usertotal"></span>
                </div>
            </div>


            <div style="margin-left: 840px; margin-top: 10px;">
                <br />
                <br />
                <br />
                <br />
                <br />
                <br />
                <br />
                <br />

                <div id="BtnSaveDivId" style="margin-top: 75px;">
                    <i class="fa fa-floppy-o fa-3x">
                        <input type="Button" value="Save & Print" style="" id="btnidsubmit" /></i>
                </div>

            </div>


        </div>

    }


</div>
<script src="~/Scripts/OrderManagerScript.js"></script>

<script>

    function submitDetailsForm() {
        $("form").submit();
    };



    function onBlurTestID() {
        var vartxttestname = $("#txtTestName").val();
        var strSub = vartxttestname.substring(vartxttestname.indexOf('/'), vartxttestname.indexOf(')'));
    };

    var Counter = 0;
    var CounterDepo = 0;
    $('#btnidsubmit').on("click", function () {
        var depositAmt = parseFloat($('#BalanceDeposit').val());
        var totalAmt = parseFloat($('#TotalAmountDiv').val());
        var TenderAmount = parseFloat($('#TenderAmountId').val());
        var ReturnAmount = parseFloat($('#returnid').val());
        var AddMoreDepoAmount = parseFloat($('#AddMoreDepoID').val());

        if ($("#BillForm").valid()) {



            if ($('#PaymentMode').val() != 315) {
                if (isNaN(TenderAmount))
                    TenderAmount = 0;

                if (TenderAmount < totalAmt) {

                    alert("Tender amount is less than Total amount ! ");
                    $("#TenderAmountId").focus();

                    $("form").submit(function (e) {
                        e.preventDefault();
                    });
                }
                else {

                    if (Counter < 1) {
                        Counter = 1;
                        $('form').unbind('submit').submit();
                        return false;

                    } else {
                        $("form").submit(function (e) {
                            e.preventDefault();
                        });
                    }


                }
            }

            else {

                if ($('#PaymentMode').val() == 315) {

                    if (isNaN(AddMoreDepoAmount))
                        AddMoreDepoAmount = 0;
                    depositAmt = depositAmt + AddMoreDepoAmount;

                    if (depositAmt < totalAmt) {

                        callAlertFunction();

                        $("form").submit(function (e) {
                            e.preventDefault();
                        });

                    }
                    else {
                        if (CounterDepo < 1) {
                            CounterDepo = 1;
                            $('form').unbind('submit').submit();
                            return false;

                        }
                        else {
                            $("form").submit(function (e) {
                                e.preventDefault();
                            });
                        }

                    }

                }

            }
            $("form").submit(function (e) {
                e.preventDefault();
                return false;
            });
        } else {
            return false;
        }


    });




</script>



<script type="text/javascript">
    function onDiscountChange() {
        var vartxtTotalAmount = $("#txtTotalAmount").val();
        var vartxtDiscount = $("#txtDiscount").val();
        var vartxtPayableAmount = $("#txtPayableAmount").val();


        if (vartxtTotalAmount == "") {
            vartxtTotalAmount = 0;
        }
        if (vartxtDiscount == "") {
            vartxtDiscount = 0;
        }


        var discountAmt = parseFloat(vartxtTotalAmount) * parseFloat(vartxtDiscount) / 100;

        varTotal = parseFloat(vartxtTotalAmount) - parseFloat(discountAmt);
        $("#txtPayableAmount").val(parseFloat(varTotal.toFixed(2)));
    };


    function ExecuteTenderAmount() {

        var TotalAmountDiv = $("#TotalAmountDiv").val();
        var TenderAmountVal = $("#TenderAmountId").val();

        if (TenderAmountVal == "") {
            TenderAmountVal = 0;
        }
        if (!isNaN(TenderAmountVal)) {

        }
        var Totalreturn = parseFloat(TenderAmountVal) - parseFloat(TotalAmountDiv);

        $("#returnid").val(parseFloat(Totalreturn.toFixed(2)));

    };

    function ExecuteDepoAmountNew() {

        var TotalAmountDiv = $("#TotalAmountDiv").val();
        var TotalDepoAmount = $("#BalanceDeposit").val();
        var CurrentDepoAmount = $("#AddMoreDepoID").val();

        if (TotalDepoAmount == isNaN) {
            TotalDepoAmount = 0;
        }

        if (CurrentDepoAmount == isNaN) {
            CurrentDepoAmount = 0;
        }
        if (TotalAmountDiv == isNaN) {
            TotalAmountDiv = 0;
        }

        var CurrentDepo = parseFloat(TotalDepoAmount) + parseFloat(CurrentDepoAmount);
        var BalanceNewDepoAmt = parseFloat(CurrentDepo) - parseFloat(TotalAmountDiv);
        $("#NewDepo").val(CurrentDepo);
        $("#RemainingDepo").val(BalanceNewDepoAmt);


    };
    function ExecuteDepoAmount() {

        //var TotalDepoAmount = $("#HiddenBalanceDepositId").val();
        //var CurrentDepoAmount = $("#AddMoreDepoID").val();
        //var TotalBillAmount = $("#TotalAmountDiv").val();

        //var CurrentDepo = parseFloat(TotalDepoAmount) + parseFloat(CurrentDepoAmount);
        //var RemainingChangeDepo = CurrentDepo - TotalBillAmount;
        //$("#BalanceDeposit").val(parseFloat(CurrentDepo.toFixed(2)));
        //$("#RemainingDepo").val(parseFloat(RemainingChangeDepo.toFixed(2)));

    };

</script>


<script type="text/javascript">
    var $cbsRadiology = $('input[id="chkRadiology"]');
    function calcUsageRadioLogy() {

        var totalRadiology = $("#usertotal").val();
        alert(totalRadiology);
        if (totalRadiology == "") {
            totalRadiology = 0;
        }

        $cbsRadiology.each(function () {
            if (this.checked) {
                var data = $(this).attr('text');
                totalRadiology = parseFloat(totalRadiology) + parseFloat(data);
            }
        });

        $("#usertotal").text(totalRadiology);
        var totalForModelRadiology = $("#usertotal").text();
        $("#txtTotalAmount").val(totalForModelRadiology);
        $("#txtPayableAmount").val(totalForModelRadiology);
        onDiscountChange();
    };
    $cbsRadiology.click(calcUsageRadioLogy);

</script>

<script type="text/javascript">

    function showHideDiv(divId) {
        $("#con_" + divId).slideToggle("slow");
    };
</script>

<script>
    $(function () {
        $('.linkb').click(function () {
            var ipvalue = $("#txtpatientName").val();
            var membershipId = $("#txtMemembershipName").val();
            //var deptId = $("#DepartmentID").val();
            this.href = this.href.replace("xxx", ipvalue);
            this.href = this.href.replace("yyy", membershipId);

        });
    });
</script>
<script>
    $(function () {
        $('.linkc').click(function () {
            var ipvalue = $("#txtTestName").val();
            var ipid = $("#txtpatientName").val();
            var userid = $("#hduserid").val();
            var deptId = $("#Department").val();
            var disin = $("#DiscountIN").val();
            var times = $("#Times").val();
            var detail = "&" + "fn=" + $("#FirstName").val() + "&mn=" + $("#MiddleName").val() + "&ln=" + $("#LastName").val() + "&add=" + $("#Address").val() + "&age=" + $("#Age").val() + "&gen=" + $("#Gender").val() + "&phno=" + $("#PhoneNo").val() + "&nation=" + $("#CountryID").val() + "&disin=" + disin + "&per=" + $("#txtPer").val() + "&tim=" + times + "&dep=" + $("#txtDeposit").val() + "&docfee=" + $('#txtDoctorFee').val() + "&doctax=" + $('#hdDoctorTax').val() + "&refdoc=" + $('#ReferDoctorID').val() + "&userid=" + userid;

            this.href = this.href.replace("xxx", ipvalue);
            if ($("#txtpatientName").val() != "") {
                this.href = this.href.replace("yyy", ipid);
            }
            else {
                this.href = this.href.replace("yyy", 0);
            }
            this.href = this.href.replace("zzz", deptId + detail + "#top");
            onDiscountChange();
        });
    });
</script>
<script>
    $(function () {
        $('.linkd').click(function () {
            this.href = this.href;
            var deptId = $("#Department").val();
            var detail = "&" + "fn=" + $("#FirstName").val() + "&mn=" + $("#MiddleName").val() + "&ln=" + $("#LastName").val() + "&add=" + $("#Address").val() + "&age=" + $("#Age").val() + "&gen=" + $("#Gender").val() + "&phno=" + $("#PhoneNo").val() + "&nation=" + $("#CountryID").val() + "&dep=" + $("#txtDeposit").val() + "&docfee=" + $('#txtDoctorFee').val() + "&doctax=" + $('#hdDoctorTax').val() + "&refdoc=" + $('#ReferDoctorID').val();
            this.href = this.href.replace("yyy", deptId + detail + "#top");
        });
    });
</script>
<script>
    $(document).ready(function () {
        //$("#bill_to").hide();
        $('.linkd').addClass("row-button btn btn-warning");
        $('.linkc').addClass("row-button btn btn-warning");
        $('.linkb').addClass("row-button btn btn-warning");
        $('.linkf').addClass("row-button btn btn-warning");
        //for calculation
        var vartxtTotalAmount = $("#txtTotalAmount").val();
        var vartxtDiscount = $("#txtDiscount").val();
        var vartxtPayableAmount = $("#txtPayableAmount").val();
        if (vartxtTotalAmount == "") {
            vartxtTotalAmount = 0;
        }
        if (vartxtDiscount == "") {
            vartxtDiscount = 0;
        }
        var discountAmt = parseFloat(vartxtTotalAmount) * parseFloat(vartxtDiscount) / 100;
        varTotal = parseFloat(vartxtTotalAmount) - parseFloat(discountAmt);
        $("#txtPayableAmount").val(parseFloat(varTotal.toFixed(2)));
    });
</script>


<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.rowr").remove();
    });

</script>
<script type="text/javascript">
    var $cbs = $('input[id="chk"]');
    function calcUsage() {

        var total = $("#usertotal").val();
        //alert(total + " pathotest");
        if (total == "") {
            total = 0;
        }

        $cbs.each(function () {
            // if (this.checked) {
            var data = $(this).attr('text');
            total = parseFloat(total) + parseFloat(data);
            //  }
        });
        $("#usertotal").text(total);
        var totalForModel = $("#usertotal").text();
        $("#txtTotalAmount").val(totalForModel);
        $("#txtPayableAmount").val(totalForModel);
    };


</script>


<script type="text/javascript">

    $("#Add-Item").on('change', '.SectionId', function () {
        var id = this.id;

        id = id.replace("__SectionId", "__TestId");
        $('#' + id).val('');
        $.get('/AjaxRequest/GetPathoTest/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });

</script>

@*for getting price of test*@

<script type="text/javascript">
    $("#Add-Item").on('change', '.TestId', function () {
        var id = this.id;

        id = id.replace("__TestId", "__Price");
        $('#' + id).val('');
        $.get('/AjaxRequest/getTestPrice/' + this.value,
              function (jsonResult) {
                  // alert(jsonResult);
                  $('#' + id).val(jsonResult);
                  var data = $('#' + id).val();
                  alert(data);

                  var varTotalAmount = $("#TotalAmount").val();
                  if (varTotalAmount == '') {
                      varTotalAmount = 0;
                  }
                  $("#TotalAmount").val(parseFloat(data) + parseFloat(varTotalAmount));
              });

    });
</script>


<script type="text/javascript">

    var MyViewBagValue = parseInt(@ViewBag.deptCode);
    if (MyViewBagValue > 0) {
        $("#Department").val(MyViewBagValue);
    }
    var deptid = "";
    function GetCurrrnedeptid() {
        // alert(MyViewBagValue);
        var DptId = $("#Department").val();
        return DptId;
    };
    deptid = GetCurrrnedeptid();
    $(document).ready(function () {
        $("#Department").on('change', (function () {
            deptid = GetCurrrnedeptid();
        }));
        $("#txtTestName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/BillingCounter/SearchTestName?deptid=" + deptid,
                    type: "POST",
                    dataType: "json",
                    data: { s: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            //alert(item);
                            return { label: item, value: item };
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>

<script type="text/javascript">
    
    $(document).ready(function () {
        $("#Department").on('change', (function () {
            $("#txtTestName").val('');
        }));
    })

</script>
<script type="text/ecmascript">

    $(document).ready(function () {
        //$("#txtTestName").focus();
        $('.m_title').focus();
        // $("#bill_to").hide();
        //$("#CountryID").val("153");

        var selectedRadio = $("input[name='rd']:checked").val();
        if (selectedRadio == 1) {

            $('#bill_to').hide();


        }

        $('#txtDoctorFee').val();
        $('#hdDoctorTax').val();

        $('#txtTotalDoctorFee').val(parseFloat($('#txtDoctorFee').val()) + parseFloat($('#hdDoctorTax').val()))




    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        if ($("#txtpatientName").val() == 0 && $("#txtMemembershipName").val() == "") {
            // alert('Hello new');
            $("#rdnew").prop("checked", true)


        } else {
            // alert('Hello old');
            $("#rdold").prop("checked", true)
            $('#bill_to').show();
            $("#FirstName").attr('readonly', true);
            $("#MiddleName").attr('readonly', true);
            $("#LastName").attr('readonly', true);
            //$("#Age").attr('readonly', true);
            $("#Address").attr('readonly', true);
            $("#EmergencyMasterId").attr('readonly', true);
            $("#CountryID").attr('readonly', true);
            $("#Gender").attr('readonly', true);
            $("#PhoneNo").attr('readonly', true);

        }
    });

</script>

<script type="text/javascript">
    function showHideDiv(id) {
        if (id == 1) {
            $("#FirstName").val('');
            $("#MiddleName").val('');
            $("#LastName").val('');
            $("#Age").val('');
            $("#Address").val('');
            $("#EmergencyMasterId").val('');
            // $("#BalanceDeposit").val('');
            $("#CountryID").val('153');
            $('#bill_to').hide("slow");

            //for read only

            $("#FirstName").attr('readonly', false);
            $("#MiddleName").attr('readonly', false);
            $("#LastName").attr('readonly', false);
            $("#Age").attr('readonly', false);
            $("#Address").attr('readonly', false);
            $("#EmergencyMasterId").attr('readonly', false);
            $("#CountryID").attr('readonly', false);
            $("#Gender").attr('readonly', false);
            $("#PhoneNo").attr('readonly', false);


        }
        else {
            $("#FirstName").val('');
            $("#MiddleName").val('');
            $("#LastName").val('');
            $("#Age").val('');
            $("#Address").val('');
            $("#EmergencyMasterId").val('');
            // $("#BalanceDeposit").val('')
            $('#bill_to').show("slow");

            $("#CountryID").val('153');

            $("#FirstName").attr('readonly', true);
            $("#MiddleName").attr('readonly', true);
            $("#LastName").attr('readonly', true);
            $("#Age").attr('readonly', true);
            $("#Address").attr('readonly', true);
            $("#EmergencyMasterId").attr('readonly', true);
            $("#CountryID").attr('readonly', true);
            $("#Gender").attr('readonly', true);
            $("#PhoneNo").attr('readonly', true);

        }

    };

</script>



<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.row").remove();
        CalculateTotalAmount();
        ExecuteTenderAmount();
    });

</script>

<script type="text/javascript">

    $(".totalAmountcls").live("keyup", function () {

        CalculateTotalAmount();
    });


    function CalculateTotalAmount() {

        var allTotalSectors = $('.totalAmountcls');
        var AllTotalDiscount = $('.disAmountcls');
        var totalDisAmount = 0;
        //// Calculate 
        var totalAmt = 0;
        sectortotalDisCount = $(AllTotalDiscount).length;
        sectortotalCount = $(allTotalSectors).length;


        for (var i = 0; i <= sectortotalCount - 1; i++) {
            if (isNaN(parseFloat($(allTotalSectors[i]).val())))
                $(allTotalSectors[i]).val('0');

            totalAmt += parseFloat($(allTotalSectors[i]).val());
        }

        for (var i = 0; i <= sectortotalDisCount - 1; i++) {
            if (isNaN(parseFloat($(AllTotalDiscount[i]).val())))
                $(AllTotalDiscount[i]).val('0');

            totalDisAmount += parseFloat($(AllTotalDiscount[i]).val());
        }


        $('#TotalAmountDiv').val(parseFloat(totalAmt).toFixed(2));
        $('#GTotal').val(parseFloat(totalAmt).toFixed(2));

        $('#TotalDiscountDiv').val(parseFloat(totalDisAmount).toFixed(2));


    };


    $("#row-button").live("focusout", function (e) {
        $('#row-buttonadd').focus();
        $('#row-buttonadd').css({ 'background-color': 'Red' });

    });

    $('#row-buttonadd').keypress(function (e) {
        var key = e.which;
        if (key == 13)  // the enter key code
        {

            //e.preventDefault();
            $('.deptcls').focus();
            $('#row-buttonadd').css('border-width', '0');
            //return false;
        } else {
            e.preventDefault();
            $('.PmodeClass').focus();
            $('#row-buttonadd').css('border-width', '0');
        }
    });



    //$("#row-buttonadd").live("focusout", function (e) {
    //    $('#PaymentMode').css('border', '1px solid black');
    //    //$('#PaymentMode').focus();
    //    //$('.deptcls').focus();
    //    $('#row-buttonadd').css('border-width', '0');

    //});

    //$("#PaymentMode").live("focusout", function (e) {
    //    $('#TenderAmountId').css('border', '1px solid black');
    //    $('#TenderAmountId').focus();
    //    $('#PaymentMode').css('border-width', '0');

    //});

    $("#returnid").live("focusout", function (e) {
        $('#BtnSaveDivId').focus();
        $('#BtnSaveDivId').css('border', '2px solid blue');
        $('#TenderAmountId').css('border-width', '0');

    });


    $('#NewDepo').live('focusout', function (e) {

        $('#BtnSaveDivId').focus();
        $('#btnidsubmit').focus();

        $('#BtnSaveDivId').css('border', '2px solid blue');


    });



    //$("#btnidsubmit").live("focusout", function (e) {

    //    if (e.keyCode === 9) {
    //        e.preventDefault();
    //        // do work
    //    }
    //});



    $('#btnidsubmit').live('keypress', function (e) {
        if (e.keyCode === 9) {
            e.preventDefault();
            // do work
        }
    });

    $('#BtnSaveDivId').live('keypress', function (e) {
        if (e.keyCode === 9) {
            e.preventDefault();
            // do work
        }
    });









    $('.DoctorID').live('focusout', function (e) {

        $("#Department").focus();
    });


    $(".PmodeClass").live('change', function (e) {
        var PmodeValue = $('#PaymentMode').val();
        if (PmodeValue == '315') {
            var depositAmt = parseFloat($('#BalanceDeposit').val());
            var totalAmt = parseFloat($('#TotalAmountDiv').val());
            var TenderAmount = parseFloat($('#TenderAmountId').val());
            var ReturnAmount = parseFloat($('#returnid').val());
            if (isNaN(depositAmt))
                depositAmt = 0;
            if (isNaN(totalAmt))
                totalAmt = 0;
            var FinalCurrentDepoamount = depositAmt - totalAmt;

            $("#rowTenderAmtId").hide();
            $("#rowReturnAmountId").hide();
            $("#currentDepoDivId").show();
            $("#AddMoreDepo").show();
            //$("#AddMoreDepo").val('');
            $("#RemainingDepo").val(FinalCurrentDepoamount);
            $("#AddMoreDepoID").focus();


        }
        else {


            $("#rowTenderAmtId").show();
            $("#rowReturnAmountId").show();
            $("#currentDepoDivId").hide();
            $("#AddMoreDepo").hide();
            $("#AddMoreDepoID").val('');
            $("#NewDepo").val('');



        }
    });


    function callAlertFunction() {
        $('<div></div>').appendTo('body')
     .html('<div><h6>Deposit amount is less than billing amount. Add Deposit?</h6></div>')
     .dialog({
         modal: true,
         title: 'Delete message',
         zIndex: 10000,
         autoOpen: true,
         width: 'auto',
         resizable: false,
         buttons: {
             Yes: function () {
                 // $(obj).removeAttr('onclick');                                
                 // $(obj).parents('.Parent').remove();

                 $("#AddMoreDepo").show();
                 $("#AddMoreDepoID").focus();
                 $(this).dialog("close");
             },
             No: function () {
                 $(this).dialog("close");
             }
         },
         close: function (event, ui) {
             $(this).remove();
         }
     });
    };



</script>


@*for popup*@
<script>
    var dlg = $.noConflict();
    dlg('.linkf').click(function (e) {
        e.preventDefault();
        var val = dlg('.linkf').val();
        var url = "/BillingCounter/SearchPatient";
        dlg.get(url, null, function (data) {
            dlg('#memsrch').html(data);
            dlg(function () {
                dlg("#memsrch").dialog({
                    position: [290, 190],
                    resizable: true,
                    overFlow: scroll,
                    minWidth: 1000,
                    maxWidth: 1000,
                    maxHeight: 200,
                    title: "Patient Search"
                });
            });
        });
    });




</script>




@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
}




<script type="text/javascript">
    //$(".aucomcls").live("keyup blur", function (e) {
    $(".aucomcls").live("keyup change", function (e) {
        e.preventDefault();
        var v = this.value.length;

        if (v > 0) {

            var df = $(this).closest("tr");
            var d = df.find(".deptcls").val();
            var value = df.find(".aucomcls").val();
            var disAmount = df.find(".disAmountcls").val();
            if (disAmount == null || disAmount == "") {

                disAmount = 0;
            }

            $.get("/BillingCounter/ParticularsDetails/", { id: value, id2: d },
            function (data) {

                var fee = data;
                var arry = data.split('~');
                df.find(".ratecls").val(arry[0]);
                df.find(".ratehcls").val(arry[0]);
                df.find(".TaxOnlyShowClass").val(arry[0]);
                df.find(".rateOnlyClass").val(arry[0]);


                df.find(".taxcls").val(arry[1]);

                var taxcls = df.find(".taxcls").val();
                var TaxTotalAmount = parseFloat(taxcls);
                df.find(".taxcls").val(toFixedOwn(TaxTotalAmount, 2));
                df.find(".taxhcls").val(arry[1]);
                df.find(".clsTestId").val(arry[2]);

                var GrandTotal = parseFloat(arry[0]) + parseFloat(arry[1]);
                df.find(".pricecls").val(toFixedOwn(GrandTotal, 2));
                var txtPrice = df.find(".pricecls").val();

                df.find(".totalAmountcls").val(parseFloat(parseFloat(txtPrice) - parseFloat(disAmount)).toFixed(2));
                CalculateTotalAmount();
                var pricecls = df.find(".pricecls").val();

                if (isNaN(pricecls)) {
                    df.find(".pricecls").val(0);
                }

            });
        }
        else {

            $(this).closest("tr").find("input").val(0);
            $(this).closest("tr").find(".timcls").val(1);
            $(this).val("");

        }
    });


</script>


<script type="text/javascript">
    var j = jQuery.noConflict();
    function JqueryAjaxLoadSelectOption(selValue, targetElm, url) {
        //alert(targetElm);
        j.ajax({
            async: false,
            type: "POST",
            url: url + selValue,
            contentType: "text/json",
            data: ({ id: selValue }),
            beforeSend: function () {
                j("#" + targetElm).attr('disabled', 'disabled');
               
            },
            success: function (jsonResult) {
                var evlResult = JSON.retrocycle(jsonResult);
                var selOption = "";
                selOption = ParseJsonResultForSelectOptions(evlResult);
                tempTargetElm = targetElm.split(',');
                for (var i = 0; i < tempTargetElm.length; i++) {
                    // alert(tempTargetElm.length + " : " + tempTargetElm[i]);
                    j("#" + tempTargetElm[i]).empty().append(selOption);
                  
                    j("#" + tempTargetElm[i]).removeAttr('disabled');
                }
            },
            error: function (jsonResult) {
            }
        });

        function ParseJsonResultForSelectOptions(evlResult) {
            var selOption = "";
            j.each(evlResult, function (key, item) {
                var isSelected = (item['Selected'] == "true") ? "Selected='Selected'" : "";
                var otherAttrib = "";
                j.each(item, function (name, value) {
                    if (name != 'Selected' && name != 'Value' && name != 'Text') {
                        otherAttrib += " " + name + '="' + value + '" ';
                    }
                });
                selOption += "<option value='" + item['Value'] + "' " + isSelected + " " + otherAttrib + " >"
                + evlResult[key].Text + "</option>";
            });
            return selOption;
        }
    }
</script>
