@model HospitalManagementSystem.Models.OperationTheatreMasterModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_OperationTheatreLayout.cshtml";
}


<link href="~/Content/themes/base/jquery.ui.timepicker.css" rel="stylesheet" />
<script src="~/Scripts/jquery.ui.core.js"></script>
<script src="~/Scripts/jquery.ui.widget.js"></script>
<script src="~/Scripts/jquery.ui.datepicker.js"></script>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery.ui.timepicker.js"></script>
<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />


<script src="~/Scripts/json.cycle.js"></script>
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>




<style>
    #orid {
        width: 200px;
    }


    table#tblotm td {
        width: 500px;
        border: none !important;
    }
</style>
<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();
    });
</script>


<script>
    var j = $.noConflict();
    j(function () {
        j("#OperationDate").datepicker();
        j("#OperationStartTime").timepicker();
        j("#OperationEndTime").timepicker();
    });

</script>


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")


<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();

        $("#chargename").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/OperationTheatreMaster/SearchChargeName",
                    type: "GET",
                    dataType: "json",
                    data: { s: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            //alert(item);
                            return { label: item.ChargeName, Value: item.SurgeryChargeId };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });

    
    $("#chargename").blur(function () {
        var v = $("#chargename").val();
        //alert(v);
        $.ajax({
            url: "/OperationTheatreMaster/GetChargeAmount",
            type: "GET",
            dataType: "json",
            data: { name: v },
            success: function (data) {
                $("#Charge").val(data);
            }
        })
    })
</script>


    }


<h2 style="text-align: center;">Operation Theatre Master</h2>


<div class="contentWrapper">

    @using (Html.BeginForm("Edit", "OperationTheatreMaster", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
    {
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.OperationTheatreMasterID)
    
        <fieldset>
            <legend>Edit</legend>
            <table>
                   <tr>
                   <td>
                   Patient Id:=@Model.SourceID
                    </td>
                       <td>Patient Name:@Model.refOfOpdModel.FirstName<span>&nbsp;</span>@Model.refOfOpdModel.MiddleName<span>&nbsp;</span>@Model.refOfOpdModel.LastName</td>
                       @Html.HiddenFor(mod=>mod.refOfOpdModel.FirstName)
                       @Html.HiddenFor(mod=>mod.refOfOpdModel.MiddleName)
                       @Html.HiddenFor(mod=>mod.refOfOpdModel.LastName)
                       </tr>
               </table>
            <div class="row-fluid singleline">

                <label>

                    <div class="size">@Html.ValidationMessageFor(model => model.OperationDate)</div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.OperationDate)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.OperationDate, @Model.OperationDate.ToShortDateString())

                    </div>
                </label>


                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.OperationStartTime)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OperationStartTime)
                    </div>
                    <div class="editor-field bootstrap-timepicker">

                        @Html.EditorFor(model => model.OperationStartTime)

                    </div>

                </label>


                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.OperationRoomID)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OperationRoomID)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.OperationRoomID, HospitalManagementSystem.Utility.GetOperationRoom(), new { id = "orid" })

                    </div>

                </label>


                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.OperationEndTime)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OperationEndTime)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.OperationEndTime)

                    </div>

                </label>
                <div class="row-fluid singleline">

                    <label>
                        <div class="editor-label">
                            Operation Type
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.OperationType, HospitalManagementSystem.Utility.OperationType())
                        </div>
                    </label>


                    <label>
                        <div class="editor-label">
                            Department
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.DepartmentId, HospitalManagementSystem.Utility.GetDepartmentList())

                        </div>
                    </label>

                </div>

                <div class="row-fluid singleline">


                    
                            @Html.HiddenFor(model => model.SourceID)

                     <label>
                      <div class="size">@Html.ValidationMessageFor(model => model.ChargeName)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ChargeName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ChargeName, new { id = "chargename" })
                        @Html.ValidationMessageFor(model => model.ChargeName)
                    </div>
                </label>

                    
                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.Charge)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Charge)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Charge)

                        </div>
                    </label>
                    <label>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Discount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Discount, new { Value = 0.0 })
                            @*@Html.ValidationMessageFor(model => model.Discount)*@
                        </div>
                    </label>


                </div>
            </div>

            <div class="well well-small" id="Add-Item" style="width:638px;">


                @if (TempData["message"] != null)
                {
                    <div class="alert alert-error">

                        @TempData["message"]

                    </div>
                }

                @Html.ActionLink("Add Persons", "PersonAllocated", null, new { @class = "addProductItem btn btn-primary" })




                <table id="tblotm" style="width:500px;">
                    <tr>
                        <td class="span5 pagination-centered">
                             <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            </span>
                            Doctor Allocated Type</td>
                        <td class="span5 pagination-centered">Doctor Allocated</td>

                    </tr>
                    </table><table>
                    @try
                    {
                        foreach (var item in Model.PersonAllocatedList)
                        {
                        <tr>
                            @Html.Partial("PersonAllocated", item)
                        </tr>
                        }
                    }
                    catch { }

                </table>
            </div>




            <script type="text/javascript">
                var l = $.noConflict();
                l("#Add-Item").on('click', '.row-button', function () {
                    l(this).closest("div.row").remove();
                });

            </script>


        </fieldset>
   

        <p>
            <input type="submit" value="Edit" />
        </p>
    
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
    </div>
</div>


