@model Hospital.Models.StockItemPurchaseModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_StockLayout.cshtml";
}
@*<script src="~/Scripts/json.cycle.js"></script>*@
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>
<h2 style="text-align: center;">Stock Item Purchase Setup</h2>

<style>
    .custom-table td {
        border: none;
    }

    .sizes {
        width: 150px;
    }
</style>

@if (TempData["message"] != null || TempData["message"] != "")
{ 
    <p>
        @TempData["message"]
    </p>
}
<script type="text/javascript">

    $(document).ready(function () {
        $("#btns").hide();
        AddClickEvents();

    });
</script>

<div class="contentWrapper">



    @using (Html.BeginForm("Create", "StockItemPurchase", FormMethod.Post, new { @id = "FormId" }))
    {
    
        <div class="bs-docs-example form-inline">
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Create</legend>




                <div class="row-fluid singleline">

                    <label>
                        <div class="size">@Html.ValidationMessageFor(model => model.ItemOrderId)</div>
                        <div class="editor-label">
                            Purchase Order No
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ItemOrderId, new { @readonly = "readonly" })

                        </div>
                    </label>
                    @* <label>
                        @Html.ActionLink("Search", "SearchOrder", "StockItemPurchase", new { ipvalue = "xxx" }, new { @class = "linkb" })
                    </label>*@
                </div>
                <div class="row-fluid singleline">

                    <label>

                        <div class="size">@Html.ValidationMessageFor(model => model.StockEntryNo)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StockEntryNo)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.StockEntryNo, new { @readonly = "readonly" })

                        </div>

                    </label>


                    <label>

                        <div class="size">@Html.ValidationMessageFor(model => model.ItemBillNo)</div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemBillNo)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ItemBillNo)

                        </div>

                    </label>
                    <label>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.StockSupplierId)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.StockSupplierId, Hospital.Utility.GetSupplier())
                            @Html.ValidationMessageFor(model => model.StockSupplierId)
                        </div>
                    </label>

                    <label>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Narration)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Narration)
                            @Html.ValidationMessageFor(model => model.Narration)
                        </div>

                    </label>

                </div>



                <div class="well well-small" id="Add-Item" style="width: 1000px;">

                    @Html.ActionLink("Add Items", "StockItemPurchaseDetail", null, new { @id = "btns", @class = "addProductItem btn btn-primary" })
                    <b>Items List</b>
                    <br />
                    <br />
                    <table id="tblotm" style="width: 890px; margin-left: 10px">
                        <tr>
                            @*<td class="span5 pagination-centered" style="border: none">Category</td>
                            <td class="span5 pagination-centered" style="border: none">Sub Category</td>*@
                            <td class="span5 pagination-centered" style="border: none">Item Name</td>
                            <td class="span5 pagination-centered" style="border: none">Qtn Qnt</td>
                            <td class="span5 pagination-centered" style="border: none">Qtn Rate</td>
                            <td class="span5 pagination-centered" style="border: none">Bill Qnt</td>
                            <td class="span5 pagination-centered" style="border: none">Bill Rate</td>
                            <td class="span5 pagination-centered" style="border: none">Batch No.</td>
                            <td class="span5 pagination-centered" style="border: none">Mfd.Date</td>
                            <td class="span5 pagination-centered" style="border: none">Warrenty</td>
                            <td class="span5 pagination-centered" style="border: none">Expiry Date</td>
                        </tr>
                    </table>
                    <table>
                        @try
                        {
                            int i = 0;
                            foreach (var item in Model.StockItemEntryList)
                            {
                                ViewBag.id = i;
                            <tr>
                                @Html.Partial("StockItemPurchaseDetail", item)
                            </tr>
                                i++;
                            }
                        }
                        catch { }

                    </table>
                </div>

                <br />
                <br />

                <div class="row-fluid singleline">

                    <label>

                        <div>
                            Amount
                        </div>

                        <div>
                            @Html.TextBoxFor(model => model.Amount, new { @readonly = "readonly" })

                        </div>
                    </label>



                    <label>
                        <div class="">
                            @Html.LabelFor(model => model.Discount) (%)
                        </div>
                        <div>
                            @Html.TextBoxFor(model => model.Discount)
                        </div>
                    </label>

                    <label>
                        <div>
                            @Html.LabelFor(model => model.VatAmount)
                        </div>
                        <div>
                            @Html.TextBoxFor(model => model.VatAmount)
                        </div>
                    </label>

                    <label>
                        <div>
                            @Html.LabelFor(model => model.TotalAmount)
                        </div>
                        <div>
                            @Html.TextBoxFor(model => model.TotalAmount, new { @readonly = "readonly" })
                        </div>
                    </label>
                </div>

                <div class="row-fluid singleline">

                    <label>

                        <div>
                            Amount
                        </div>

                        <div>
                            @Html.DropDownListFor(model => model.PaymentType, Hospital.Utility.GetPaymentModeForStock())

                        </div>
                    </label>
                </div>

                @Html.Hidden("tempamount")

                <br />

                <p>
                    <input type="submit" value="Create" />

                </p>
            </fieldset>



        </div>
        <span id="linkNewBack">@Html.ActionLink("Back to List", "Index", "StockPurchaseOrder")</span>
    }
</div>


@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")


    <script type="text/javascript">

        $(document).ready(function () {
            //alert();


            $("#ItemOrderId").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/StockItemPurchase/AutocompletePurchaseOrder",
                        type: "GET",
                        dataType: "json",
                        data: { s: request.term },
                        success: function (data) {

                            response($.map(data, function (item) {

                                return { label: item, value: item };


                            }))

                        },
                        //error:function(data){
                        //    response($.map(data, function (item) {

                        //        return { label: item.StockUnitName, Value: item.StockUnitName };
                        //    }))
                        //}
                    })
                },
                messages: {
                    noResults: "", results: ""
                }
            });
        });
    </script>

}
<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.row").remove();
        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum", "StockItemPurchase")';
        var formData = form.serialize();

        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
            $("#TotalAmount").val(f);
        });

    });

</script>

<script type="text/javascript">

    var formData = null;


    $("#btns").click(function (e) {
        $("#amounts").show();
    });


    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockSubCategoryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetSubCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.SubCategoryId', function () {
        var id = this.id;

        id = id.replace("__StockSubCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemName/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemNameByCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('keyup', '.Rate', function (e) {

        e.preventDefault();
        $("#amounts").show();
        var id = this.id;
        var ids = id.split("_");
        var bv = $("#" + id).val();
        var qv = $("#qrate_" + ids[1]).val();
        if (parseFloat(bv) > parseFloat(qv)) {
            alert("Bill value is greater than quotation value!!");
            $("#" + id).val("");
        }
        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum", "StockItemPurchase")';
        var formData = form.serialize();
        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
            $("#TotalAmount").val(f);
        });
    });
    $("#Add-Item").on('keyup', '.Quantity', function (e) {

        e.preventDefault();
        $("#amounts").show();
        var id = this.id;
        var ids = id.split("_");
        var bv = $("#" + id).val();
        var qv = $("#qqty_" + ids[1]).val();
        if (parseFloat(bv) > parseFloat(qv)) {
            alert("Bill value is greater than quotation value!!");
            $("#" + id).val("");
        }
        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum", "StockItemPurchase")';
        var formData = form.serialize();
        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
            $("#TotalAmount").val(f);
        });
    });
</script>

<script>

    $("#Discount").live('keyup', function (e) {
        e.preventDefault();
        var a = $("#tempamount").val();
        var b = $("#VatAmount").val();
        var c = (parseFloat(b) / 100) * parseFloat(a);
        var d = parseFloat(a) + parseFloat(c);
        var e = $("#Discount").val();
        var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
        $("#TotalAmount").val(f);
    });

    $("#VatAmount").live('keyup', function (e) {
        e.preventDefault();
        var a = $("#tempamount").val();
        var b = $("#VatAmount").val();
        var c = (parseFloat(b) / 100) * parseFloat(a);
        var d = parseFloat(a) + parseFloat(c);
        var e = $("#Discount").val();
        var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
        $("#TotalAmount").val(f);
    });

</script>

<script>

    $(document).ready(function () {
        $('.ExpiryDate').val("");
        $(".ExpiryDate").attr("value", "@DateTime.Now.ToShortDateString()");

        $('.MfdDate').val("");
        $(".MfdDate").attr("value", "@DateTime.Now.ToShortDateString()");

        $('.WarrentyDate').val("");
        $(".WarrentyDate").attr("value", "@DateTime.Now.ToShortDateString()");




    });

</script>


<script>
    $(function () {
        $('.linkb').click(function () {
            var ipvalue = $("#ItemOrderId").val();

            var ipanddid = ipvalue;
            this.href = this.href.replace("xxx", ipanddid);
            //this.href = this.href.replace("yyy", detpId);
        });
    });





    $(function () {
        $(".ExpiryDate").datepicker();
        $(".MfdDate").datepicker();
        $(".WarrentyDate").datepicker();



    });
</script>

