@model Hospital.Models.StockItemPurchaseModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_StockLayout.cshtml";
}
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>

@if (TempData["message"] != null || TempData["message"] != "")
{ 
    <p>
        @TempData["message"]
    </p>
}
<style>
    .custom-table td {
        border: none;
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {
        AddClickEvents();


    });
</script>

<h2 style="text-align: center;">Stock Item Purchase Setup</h2>


<div class="contentWrapper">



    @using (Html.BeginForm("Edit", "StockItemPurchase", FormMethod.Post, new { @id = "FormId" }))
    {
        <div class="bs-docs-example form-inline">
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Edit</legend>

                <div class="row-fluid singleline">

                    <label>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemOrderId)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ItemOrderId)
                            @Html.ValidationMessageFor(model => model.ItemOrderId)
                        </div>
                    </label>

                    <label>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemBillNo)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ItemBillNo)
                            @Html.ValidationMessageFor(model => model.ItemBillNo)
                        </div>
                    </label>
                    <label>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.StockSupplierId)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.StockSupplierId, Hospital.Utility.GetSupplier())
                            @Html.ValidationMessageFor(model => model.StockSupplierId)
                        </div>

                    </label>

                    <label>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Narration)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.Narration)
                            @Html.ValidationMessageFor(model => model.Narration)
                        </div>

                    </label>

                </div>



                <div class="well well-small" id="Add-Item" style="width: 900px;">

                    @Html.ActionLink("Add Items", "StockItemPurchaseDetail", null, new { @class = "addProductItem btn btn-primary" })
                    <br /><br />
                    <table id="tblotm" style="width:782px;margin-left:26px">
                        <tr>
                            <td class="span5 pagination-centered" style="border:none">Category</td>
                      <td class="span5 pagination-centered" style="border:none">Sub Category</td>
                      <td class="span5 pagination-centered" style="border:none">Item Name</td>
                      <td class="span5 pagination-centered" style="border:none">Quotation Quantity</td>
                      <td class="span5 pagination-centered" style="border:none">Quotation Rate</td>
                      <td class="span5 pagination-centered" style="border:none">Bill Quantity</td>
                      <td class="span5 pagination-centered" style="border:none">Bill Rate</td>
                        </tr>

                    </table>
                    <table>
                        @try
                        {
                            foreach (var item in Model.StockItemEntryList)
                            {
                        
                            <tr>
                                @Html.Partial("StockItemPurchaseDetail", item)
                            </tr>
                            }
                        }
                        catch { }

                    </table>
                </div>

                
                <br /><br />
                    <div class="row-fluid singleline">

                        <label>
                            <div>
                                Amount
                            </div>
                            <div>
                                @Html.EditorFor(model => model.Amount)
                            </div>


                        </label>

                        <label>

                            <div>
                                @Html.LabelFor(model => model.Discount)
                            </div>
                            <div>
                                @Html.EditorFor(model => model.Discount)
                            </div>

                        </label>

                           <label>
                               <div>
                            @Html.LabelFor(model => model.VatAmount)
                       </div>
                               <div>
                            @Html.EditorFor(model => model.VatAmount)
                        </div>

                               </label>

                        <label>
                            <div>
                            @Html.LabelFor(model => model.TotalAmount)
                       </div>
                            <div>
                            @Html.EditorFor(model => model.TotalAmount)
                   </div>
                </label>
                        </div>
                @Html.Hidden("tempamount")
            
        
        
        
                <p>
                    <input type="submit" value="Save" />
                    
                </p>
            </fieldset>
        </div>
    }

    <div><span id="linkNewBack">@Html.ActionLink("Back to List", "Index")</span></div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.row").remove();
        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum", "StockItemPurchase")';
        var formData = form.serialize();

        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e);
            $("#TotalAmount").val(f);
        });

    });

</script>

<script type="text/javascript">

    var formData = null;

    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockSubCategoryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetSubCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.SubCategoryId', function () {
        var id = this.id;

        id = id.replace("__StockSubCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemName/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemNameByCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('keyup', '.Rate', function (e) {

        e.preventDefault();


        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum", "StockItemPurchase")';
        var formData = form.serialize();
        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e);
            $("#TotalAmount").val(f);
        });
    });
    $("#Add-Item").on('keyup', '.Quantity', function (e) {

        e.preventDefault();


        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum", "StockItemPurchase")';
        var formData = form.serialize();
        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e);
            $("#TotalAmount").val(f);
        });
    });
</script>

<script>

    $("#Discount").live('keyup', function (e) {
        e.preventDefault();
        var a = $("#tempamount").val();
        var b = $("#VatAmount").val();
        var c = (parseFloat(b) / 100) * parseFloat(a);
        var d = parseFloat(a) + parseFloat(c);
        var e = $("#Discount").val();
        var f = parseFloat(d) - parseFloat(e);
        $("#TotalAmount").val(f);
    });

    $("#VatAmount").live('keyup', function (e) {
        e.preventDefault();
        var a = $("#tempamount").val();
        var b = $("#VatAmount").val();
        var c = (parseFloat(b) / 100) * parseFloat(a);
        var d = parseFloat(a) + parseFloat(c);
        var e = $("#Discount").val();
        var f = parseFloat(d) - parseFloat(e);
        $("#TotalAmount").val(f);
    });

</script>
