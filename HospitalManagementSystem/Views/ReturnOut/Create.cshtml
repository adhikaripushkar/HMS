@model Hospital.Models.StockReturnOutModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_StockLayout.cshtml";
   
}

<h2>Create</h2>
<div class="contentWrapper">
@using (Html.BeginForm("Create", "ReturnOut", FormMethod.Post, new { @id = "FormId",@class = "bs-docs-example form-inline"})) 
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Stock Return Out</legend>

        
        <div class="row-fluid singleline">
            <label>
         <div class="editor-label">
           From Date
        </div>
        <div class="editor-field">
            @Html.TextBox("fromdate")
        </div>

             </label>
            <label>
        <div class="editor-label">
          @Html.Label("To Date")
        </div>
        <div class="editor-field">
            @Html.TextBox("dateto")
        </div>
        </label>
        <label>

        <div class="editor-label">
           Purchase Order No.
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PurchaseOrderNo)
            @Html.ValidationMessageFor(model => model.PurchaseOrderNo)
        </div>
            </label>
        <label>
         <div class="editor-label">
           Stock Entry No.
        </div>
        <div class="editor-field">
            @Html.TextBox("stockentryno")
        </div>
    </label>
            
            </div>
        <div class="row-fluid singleline">
            <label>
        <div class="editor-label">
           Invoice/Bill No.
        </div>
        <div class="editor-field">
            @Html.TextBox("billno")
        </div></label>
            


       <label>

        <div class="editor-label">
          @Html.Label("Supplier")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.SupplierId,Hospital.Utility.GetSupplier())
            @Html.ValidationMessageFor(model => model.SupplierId)
        </div>
           </label>
        </div>

    <p id="linkNewBack">   @Html.ActionLink("Search", "SearchPurchase", "ReturnOut", new {SupplierId="uuu", PurchaseOrderNo="vvv",stockentryno = "xxx" ,billno="yyy",dateto="zzz",fromdate="www"}, new { @class = "linkb" })</p>

        <table>
            <tr>
                <th>
                    SI
                </th>
                <th>
                    Item
                </th>
                <th>
                    Qunatity
                </th>
                <th>
                    Supplier
                </th>
                <th>
                    Return Out Quantity
                </th>
            </tr>

            @try
            {
                for (int j = 0; j < Model.ReturnOutList.Count; j++)
                {
                <tr>
                    <td>
                        @(j + 1)
                    </td>
                    <td>
                        @Hospital.Utility.GetItemNameFromStockItemEntry( Model.ReturnOutList[j].ItemId)
                    </td>
                    <td>
                        @Model.ReturnOutList[j].ReturnOutQty
                    </td>
                    <td>
                        @Hospital.Utility.GetSupplierName( Model.ReturnOutList[j].SupplierId)
                    </td>
                    <td>
                        @Html.TextBoxFor(modelItem => Model.ReturnOutList[j].ReturnOutQty, new {@Value=""})
                        @Html.HiddenFor(modelItem=>Model.ReturnOutList[j].PurchaseId)
                        @Html.HiddenFor(modelItem=>Model.ReturnOutList[j].PurchaseOrderNo)
                        @Html.HiddenFor(modelItem=>Model.ReturnOutList[j].ItemId)
                        @Html.HiddenFor(modelItem=>Model.ReturnOutList[j].SupplierId)
                    </td>
                </tr>
               
                }
            }
            catch { }
        </table>
        <div class="row-fluid singleline">
            <label>
        <div class="editor-label">
           Return Out No.
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ReturnOutNo, new { @readonly="readonly"})
            @Html.ValidationMessageFor(model => model.ReturnOutNo)
        </div>
</label>
            <label>
        <div class="editor-label">
           Return Out Date
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ReturnOutDate)
            @Html.ValidationMessageFor(model => model.ReturnOutDate)
        </div>
</label><label>
        

        <div class="editor-label">
            Remarks
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>
    </label>
</div>
        

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
    </div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")


<script type="text/javascript">
    var autocom = $.noConflict();

    autocom(document).ready(function () {
        //alert();


        autocom("#PurchaseOrderNo").autocomplete({
            source: function (request, response) {
                autocom.ajax({
                    url: "/ReturnOut/Autocompletes",
                    type: "GET",
                    dataType: "json",
                    data: { s: request.term+"_"+1 },
                    success: function (data) {

                        response(autocom.map(data, function (item) {

                            return { label: item, value: item };

                        }))

                    },
                   
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

        autocom("#stockentryno").autocomplete({
            source: function (request, response) {
                autocom.ajax({
                    url: "/ReturnOut/Autocompletes",
                    type: "GET",
                    dataType: "json",
                    data: { s: request.term + "_" + 2 },
                    success: function (data) {

                        response(autocom.map(data, function (item) {

                            return { label: item, value: item };

                        }))

                    },

                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

        autocom("#billno").autocomplete({
            source: function (request, response) {
                autocom.ajax({
                    url: "/ReturnOut/Autocompletes",
                    type: "GET",
                    dataType: "json",
                    data: { s: request.term + "_" + 3 },
                    success: function (data) {

                        response(autocom.map(data, function (item) {

                            return { label: item, value: item };

                        }))

                    },

                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

    });
</script>

    }
<script>
    $(function () {
        $('.linkb').click(function () {
            var stockentryno = $("#stockentryno").val();
            var billno = $("#billno").val();
            var dateto = $("#dateto").val();
            var fromdate = $("#fromdate").val();
            var PurchaseOrderNo = $("#PurchaseOrderNo").val();
            var SupplierId = $("#SupplierId").val();

            this.href = this.href.replace("xxx", stockentryno);
            this.href = this.href.replace("yyy", billno);
            this.href = this.href.replace("zzz", dateto);
            this.href = this.href.replace("www", fromdate);
            this.href = this.href.replace("vvv", PurchaseOrderNo);
            this.href = this.href.replace("uuu", SupplierId);
        });
    });

   
</script>

<script>
    var j = $.noConflict();
    j(function () {
        j("#fromdate").datepicker();
        j("#dateto").datepicker();
        j("#ReturnOutDate").datepicker();
    });

  </script>

            
                



