@model HospitalManagementSystem.Models.EmergecyMasterModel

@{
    
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_EmergencyLayout.cshtml";
}




<style>
    select {
        width: 210px;
        height: 27px;
    }
</style>


<script src="~/Scripts/jquery.ui.core.js"></script>
<script src="~/Scripts/jquery.ui.widget.js"></script>
<script src="~/Scripts/jquery.ui.datepicker.js"></script>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery.ui.timepicker.js"></script>

<link href="~/Content/themes/base/jquery.ui.all.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery.ui.timepicker.css" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>

<script src="~/Scripts/json.cycle.js"></script>

<script>

    $(document).ready(function () {


        //$('.PreferDateId').val("");
        //$('.PreferTimeId').val("");

    });

</script>

<script>


    var j = $.noConflict();
    j(function () {
        j(".DateId").datepicker();
        j(".TriageTimeId").datepicker();
        j(".TimeInId").timepicker();
        j(".TimeOutId").timepicker();
        j("#EmergencyTriageModel_Time").timepicker();
    });
</script>


<style>
    #mngsize {
        width: 208px;
        height: 28px;
    }
</style>

<h2 align="center">Emergency</h2>

<div class="contentWrapper">

    @using (Html.BeginForm("Edit", "EmergencyMaster", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
    {
        @Html.ValidationSummary(true)
  

        <fieldset>
            <legend>Emergency</legend>
            @Html.HiddenFor(model => model.EmergencyMasterId)
            <div class="row-fluid singleline">

                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.Case)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Case)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.Case, HospitalManagementSystem.Utility.GetCaseForEmergency(), new { @readonly = "readonly" })
                    </div>

                </label>
            </div>
            <div class="row-fluid singleline">
                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.ObjOpdMaster.PatientTitle)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ObjOpdMaster.PatientTitle)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ObjOpdMaster.PatientTitle, HospitalManagementSystem.Utility.GetPatientTitle(), new { @class = "ddpsize", @readonly = "readonly" })
                    </div>

                </label>
                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.OpdEmergencyViewModel.Firstname)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OpdEmergencyViewModel.Firstname)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.OpdEmergencyViewModel.Firstname, new { @readonly = "readonly" })
                    </div>

                </label>

                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.OpdEmergencyViewModel.MiddleName)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OpdEmergencyViewModel.MiddleName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.OpdEmergencyViewModel.MiddleName, new { @readonly = "readonly" })
                    </div>

                </label>

                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.OpdEmergencyViewModel.LastName)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OpdEmergencyViewModel.LastName)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.OpdEmergencyViewModel.LastName, new { @readonly = "readonly" })
                    </div>

                </label>
            </div>

            <div class="row-fluid singleline">


                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.OpdEmergencyViewModel.Gender)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OpdEmergencyViewModel.Gender)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.OpdEmergencyViewModel.Gender, HospitalManagementSystem.Utility.GetGenderList(), new { @readonly = "readonly" })

                    </div>

                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.OpdEmergencyViewModel.AgeYear)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OpdEmergencyViewModel.AgeYear)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.OpdEmergencyViewModel.AgeYear, new { @readonly = "readonly" })
                    </div>

                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.ObjOpdMaster.BloodGroup)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ObjOpdMaster.BloodGroup)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ObjOpdMaster.BloodGroup, HospitalManagementSystem.Utility.BloodGroupList(), "select", new { @class = "ddpsize" })

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.ObjOpdMaster.MaritalStatus)</span>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.ObjOpdMaster.MaritalStatus)
                    </div>

                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ObjOpdMaster.MaritalStatus, HospitalManagementSystem.Utility.MatitalStatusList(), new { @class = "ddpsize" })

                    </div>
                </label>





            </div>


            <div class="row-fluid singleline">
                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.ObjOpdMaster.CountryID)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ObjOpdMaster.CountryID)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ObjOpdMaster.CountryID, HospitalManagementSystem.Utility.GetCountryNameList(), new { @id = "CountryID" })
                    </div>

                </label>

                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.OpdEmergencyViewModel.Address)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OpdEmergencyViewModel.Address)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.OpdEmergencyViewModel.Address, new { @readonly = "readonly" })
                    </div>

                </label>

                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.ContactNumber)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ContactNumber)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ContactNumber, new { @readonly = "readonly" })
                    </div>

                </label>

            </div>


            <div class="row-fluid singleline">

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Date)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Date, new { @Value = @DateTime.Now.ToShortDateString() })
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Date, new { @class = "DateId", @Value = @DateTime.Now.ToShortDateString() })
                    </div>

                </label>

                <label>

                    <span class="size">@Html.ValidationMessageFor(model => model.TimeIn)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TimeIn)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TimeIn, new { @class = "TimeInId" })
                    </div>

                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.EmergencyTriageModel.MediumId)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EmergencyTriageModel.MediumId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.EmergencyTriageModel.MediumId, HospitalManagementSystem.Utility.GetTriageMedium(), new { @readonly = "readonly" })

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.EmergencyTriageModel.Time)</span>
                    <div class="editor-label">
                        Triage Time
          @*  @Html.LabelFor(model => model.EmergencyTriageModel.Time)*@
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.EmergencyTriageModel.Time)

                    </div>
                </label>

            </div>
            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.EmergencyTriageModel.DoctorId)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EmergencyTriageModel.DoctorId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.EmergencyTriageModel.DoctorId, HospitalManagementSystem.Utility.GetDoctors(), new { @readonly = "readonly" })

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.EmergencyTriageModel.MedicalOfficer)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EmergencyTriageModel.MedicalOfficer)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.EmergencyTriageModel.MedicalOfficer, HospitalManagementSystem.Utility.GetDoctors(), new { @readonly = "readonly" })
                    </div>

                </label>


            </div>
            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.BroughtBy)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.BroughtBy)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.BroughtBy, new { @readonly = "readonly" })
                    </div>

                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.RelationShip)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RelationShip)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.RelationShip, HospitalManagementSystem.Utility.GetRelationTypeDD(), new { @readonly = "readonly" })

                    </div>

                </label>
                <label>
                    <span class="size">@*@Html.ValidationMessageFor(model => model.OpdFeeDetailsModel.RegistrationFee)*@</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EmergencyFeeDetailsModel.RegistrationFee)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.EmergencyFeeDetailsModel.RegistrationFee, new { @id = "txtRegistrationFee", @onkeyup = "onchangeevent();", @readonly = "readonly" })

                    </div>
                </label>

                <label>
                    <div class="size">@Html.ValidationMessageFor(model => model.EmergencyFeeDetailsModel.Remarks)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.EmergencyFeeDetailsModel.Remarks)
                    </div>
                    <div class="editor-field">
                        @*   ,new { @required = "@required" ,@onkeyup = "JqueryAjaxDeletePatientDoctor(this.value,'IDHERE','/AjaxRequest/TEST/')" }*@
                        @Html.TextBoxFor(model => model.EmergencyFeeDetailsModel.Remarks, new { @readonly = "readonly" })

                    </div>
                </label>
            </div>


        </fieldset>
        

      

            
   
      
        <p>
            <input type="submit" value="Edit" />
        </p>
    
    }


    <div>


        @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
    </div>
    <script type="text/javascript">

        function onchangeevent() {
            //$('#txtMiddleName').val($('#txtid').val + 3);
            //var b = $("#textbox2").val();
            //if ($("#txtMiddleName").is(":checked")) {
            //}
            // $("#txtMiddleName").hide();
            // $("#txtMiddleName").show();
            //var a = $("#txtid").val();
            //var a = $("#txtid").val();
            //var total = parseInt(a) + 2;
            //$("#txtMiddleName").val(total);

            var vartxtRegistrationFee = $("#txtRegistrationFee").val();
            var vartxtDoctorFee = $("#txtDoctorFee").val();
            var vartxtMemberDiscountAmount = $("#txtMemberDiscountAmount").val();
            var vartxtOtherDiscountAmount = $("#txtOtherDiscountAmount").val();
            var varTotal = 0;
            var varDiscount = 0;

            if (vartxtRegistrationFee == '') {
                vartxtRegistrationFee = 0;
            }
            if (vartxtDoctorFee == '') {
                vartxtDoctorFee = 0;
            }
            if (vartxtMemberDiscountAmount == '') {
                vartxtMemberDiscountAmount = 0;
            }
            if (vartxtOtherDiscountAmount == '') {
                vartxtOtherDiscountAmount = 0;
            }
            if (vartxtOtherDiscountAmount == '') {
                vartxtOtherDiscountAmount = 0;
            }
            varTotal = parseInt(vartxtRegistrationFee) + parseInt(vartxtDoctorFee);
            varDiscount = parseInt(vartxtMemberDiscountAmount) + parseInt(vartxtOtherDiscountAmount);
            var varTotalAmount = parseInt(varTotal) - ((parseInt(varDiscount) / 100) * parseInt(varTotal));
            // alert(vartxtRegistrationFee);
            $("#txtTotalAmount").val(varTotalAmount);
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#txtMemberDiscountAmount').live('keydown', function (e) {

                if (parseInt(e.keyCode) > 47 && parseInt(e.keyCode) < 58) {
                    if (parseInt($(this).val().length) <= 1) {

                    }
                    else {
                        e.preventDefault();
                    }
                }

            });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#txtOtherDiscountAmount').live('keydown', function (e) {

                if (parseInt(e.keyCode) > 47 && parseInt(e.keyCode) < 58) {
                    if (parseInt($(this).val().length) <= 1) {

                    }
                    else {
                        e.preventDefault();
                    }
                }

            });
        });
    </script>



</div>
