@model Hospital.Models.SetupEmployeeMasterModel

@{
    ViewBag.Title = "ResignationDetail";
    Layout = "~/Views/Shared/_PayRollLayout.cshtml";
}

<style>
    select {
        width: 208px;
        height: 27px;
    }
</style>
<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery.maskedinput.js"></script>
<script src="~/Scripts/json.cycle.js"></script>
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        AddClickEvents();
    });
</script>

<script>
    var j = $.noConflict();
    j(function () {
        j(".DOB").datepicker();
        j(".JoinDate").datepicker();
    });
</script>
<h2 style="text-align: center;">Employee Setup</h2>

<div class="contentWrapper">

    <div class="bs-docs-example form-inline">

        @using (Html.BeginForm("ResignationDetail", "SetupEmployeeMaster", FormMethod.Post, new { }))
        {
            @Html.ValidationSummary(true)

            <fieldset>
                <legend style="width: 1000px;">Resignation Detail</legend>
                <div>                  
                
                <div class="row-fluid singleline">
                     <label>
                        <div class="editor-field">
                            @Html.HiddenFor(model => model.EmployeeMasterId, new {@id="EmployeeID"})
                        </div>
                    </label>
                     <h5 style="text-align: left;"><b>
                    <label>                       
                        <div class="editor-label">
                            @Html.Label("Employee Name")
                        </div>
                        <div class="editor-field">
                             @Html.LabelFor(model => model.EmployeeFullName, Hospital.Utility.GetEmployeeNameFromEmpID(Model.EmployeeMasterId))
                        </div>
                    </label> </b></h5>
                </div>
                         
                <div class="row-fluid singleline">
                     <label>
                        <div class="editor-label">
                            @Html.Label("Reason")
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.ReasonForResignation)

                        </div>
                    </label>
                    </div>
                         
                <div class="row-fluid singleline">
                    <label>
                        <div class="editor-label">
                            @Html.Label("ResignationDate(Nepali)")
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("txtNepalidate", null, new { @onblur = "ChangeNepalidate(this.value,'DobId','/AjaxRequest/GetEnglishDate/')" })
                        </div>
                    </label>

                    <label>
                       <div class="editor-label">
                            @Html.Label("ResignationDate")
                        </div>
                        <div class="editor-field">
                            <span>&nbsp;</span> @Html.TextBoxFor(model => model.ResignationDate, new { @Value = DateTime.Now.ToShortDateString(), @class = "DOB", @onchange = "ChangeEnglishdate(this.value,'txtNepalidate','/AjaxRequest/getNepaliDate/')" })
                        </div>
                    </label>
                    </div>

                <div class="row-fluid singleline">
                    
                     <label>
                        <div class="editor-label">
                            @Html.Label("Approved By")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.ApprovedBy, Hospital.Utility.GetAllEmployeeList())

                        </div>
                    </label>                    

                    <label>
                        <div class="editor-label">
                            @Html.Label("Approved Date(Nepali)")
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("txtNepaliApproveddate", null, new { @onblur = "ChangeNepaliJoiningdate(this.value,'JoiningDateId','/AjaxRequest/GetEnglishDate/')" })

                        </div>
                    </label>                   

                    <label>
                        <span class="size">@Html.ValidationMessageFor(model => model.EmployeeJoinDate)</span>
                        <div class="editor-label">
                            @Html.Label("Approved Date")
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ApprovedDate, new { @class = "JoinDate", @Value = DateTime.Now.ToShortDateString(), @onchange = "ChangeEnglishJoiningdate(this.value,'txtNepaliApproveddate','/AjaxRequest/getNepaliDate/')" })

                        </div>
                    </label>                  

                </div>

                <div class="row-fluid singleline">                  
                    <div class="editor-field">
                        @Html.HiddenFor(model => model.CreatedDate)
                        @Html.ValidationMessageFor(model => model.CreatedDate)
                    </div>
                    <div class="editor-field">
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.ValidationMessageFor(model => model.CreatedBy)
                    </div>

                    <div class="editor-label">
                        @Html.HiddenFor(model => model.Status)
                    </div>
                    <div class="editor-field">
                        @Html.HiddenFor(model => model.Status)
                        @Html.ValidationMessageFor(model => model.Status)
                    </div>
                </div>
                <br />            
               </div>
                <div>
                    <br />
                    <p>
                        <input type="submit" value="Create" />
                    </p>
                </div>
                         
            </fieldset>
        }

    </div>   
</div>

<script type="text/javascript">
    jQuery(function ($) {
        $("#txtNepalidate").mask("9999/99/99");
        $("#txtNepaliApproveddate").mask("9999/99/99");

    });
</script>

<script type="text/javascript">
    function ChangeNepalidate(selvalue, targetElm, url) {

        $.ajax({
            async: false,
            type: "get",
            url: url,
            data: { NepaliDate: selvalue },
            contentType: "text/json",


            beforeSend: function () {
            },
            success: function (jsonResult) {
                $(".DOB").val(jsonResult);
            }
        });
    }
    function ChangeNepaliJoiningdate(selvalue, targetElm, url) {


        $.ajax({
            async: false,
            type: "get",
            url: url,
            data: { NepaliDate: selvalue },
            contentType: "text/json",


            beforeSend: function () {
                // $("#" + targetElm).attr('disabled', 'disabled');
                // $("#" + targetElm).addClass('ac_loading');
            },
            success: function (jsonResult) {
                $(".JoinDate").val(jsonResult);
            }
        });
    }

</script>

<script type="text/javascript">
    function ChangeEnglishdate(selvalue, targetElm, url) {


        $.ajax({
            async: false,
            type: "get",
            url: url,
            data: { EnglishDate: selvalue },
            contentType: "text/json",


            beforeSend: function () {
                // $("#" + targetElm).attr('disabled', 'disabled');
                // $("#" + targetElm).addClass('ac_loading');
            },
            success: function (jsonResult) {
                $("#txtNepalidate").val(jsonResult);
            }
        });
    }

    function ChangeEnglishJoiningdate(selvalue, targetElm, url) {
        $.ajax({
            async: false,
            type: "get",
            url: url,
            data: { EnglishDate: selvalue },
            contentType: "text/json",


            beforeSend: function () {
                // $("#" + targetElm).attr('disabled', 'disabled');
                // $("#" + targetElm).addClass('ac_loading');
            },
            success: function (jsonResult) {
                $("#txtNepaliApproveddate").val(jsonResult);
            }
        });
    }
   
</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



