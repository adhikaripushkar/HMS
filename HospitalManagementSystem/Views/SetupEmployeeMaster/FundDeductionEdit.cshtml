@model Hospital.Models.SetupEmployeeMasterModel

@{
    ViewBag.Title = "FundDeductionEdit";
    Layout = "~/Views/Shared/_PayRollLayout.cshtml";
}


<div class="contentWrapper">

    <div class="bs-docs-example form-inline">

        @using (Html.BeginForm("FundDeductionEdit", "SetupEmployeeMaster", FormMethod.Post, new { }))
        {
            <fieldset>
                <legend style="width: 1000px;">Employee Fund Deduction Setup</legend>
                <fieldset>
                 <legend style="font-size: medium; color: #1C5183; width: 1000px;">Addition</legend>
                  <div style="height: 220px; border: solid 1px #1C5183; position: relative; width: 1000px;">
                    <div id="Addition">
                        <div class="row-fluid singleline">       
                    <label>
                        <div class="editor-label">
                            @Html.Label("Employee Name")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.EmployeeMasterId, Hospital.Utility.GetAllEmployeeList(), new {@id="EmployeeID"})
                        </div>
                    </label>                           
                            <label>
                        <div class="editor-label">
                            @Html.Label("Applicable Month")
                        </div>
                        <div class="editor-field">
                             @Html.DropDownListFor(model => model.YearId, Hospital.Utility.GetNepaliYearList())
                        </div>
                    </label>
                     <label>
                        <div class="editor-label">
                            @Html.Label("Applicable Year")
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.MonthId, Hospital.Utility.GetNepaliMonthList())
                        </div>
                    </label>
                   </div>

                  

                        <div class="row-fluid singleline"> 
                   <label>
                        <div class="editor-label">
                            @Html.Label("Fund Deduction(%)")
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.FundPercentage, null, new { @id="FundPercentage", @onkeyup="CalculateFundAmount();"})
                        </div>
                    </label>

                    <label>
                        <div class="editor-label">
                            @Html.Label("Fund Deduction Amount")
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.FundAmount,null, new { @id="FundAmount"})
                        </div>
                    </label>
                </div>
                    </div>                           
                  </div>                 
                </fieldset>                
                <div>
                    <br />
                    <p>
                        <input type="submit" value="Save"/>
                    </p>
                </div>                         
            </fieldset>
        }

    </div>
  
</div>

<script>

    function GetDetails() {       
        var EmployeeID = $("#EmployeeID").val();
        $.post('@Url.Action("GetEmployeeDetailFromNew")', { EmpID: EmployeeID }, function (result) {
            $('#DesignationName').val(result.Designation);
            $('#GenderID').val(result.Gender);           
        });
    };

    function toFixedOwn(num, fixed) {
        fixed = fixed || 0;
        fixed = Math.pow(10, fixed);
        return Math.floor(num * fixed) / fixed;
    };

    function CalculateFundAmount() {
        var FundPercentage = $('#FundPercentage');
        var FundAmount = $('#FundAmount');
        var BasicSalary = $('#BasicSalary');
        var GradeAmount = $('#GradeAmount');
        var FundAmount = 0;
        if (isNaN(parseFloat($(BasicSalary).val())))
            $(BasicSalary).val('0');
        if (isNaN(parseFloat($(GradeAmount).val())))
            $(GradeAmount).val('0');
        if (isNaN(parseFloat($(FundPercentage).val())))
            $(FundPercentage).val('0');
        FundAmount = parseFloat($(BasicSalary).val()) + parseFloat($(GradeAmount).val());
        FundAmount = (parseFloat(FundAmount) * parseFloat($(FundPercentage).val())) / 100;
        $('#FundAmount').val(toFixedOwn(FundAmount,2));
    };

</script>

