@model HospitalManagementSystem.Models.BloodTransectionModel

@{
    
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_BloodBankMenuLayout.cshtml";
}








<script>
    var j = $.noConflict();
    j(function () {
        j("#RequiredDateId").datepicker();
        

       
    });

</script>


<style>

    #mngsize
    {
        width:208px;
        height: 28px;

    }


</style>

<h2 style="text-align:center;">Blood Transaction</h2>

<div class="contentWrapper">


    <div id="ShowBloodStock">
    @if (HospitalManagementSystem.Utility.GetBloodStockLists().Count>0)
{
    int Sno = 1;
    <table class="table table-striped table-condensed" style="background-color:white">
    <tr>
        <td class="span1">Sno</td>
        <td>
            @Html.LabelFor(model => model.ObjBloodStockDetails.BloodType)
        </td>
          <td>
            @Html.LabelFor(model => model.ObjBloodStockDetails.QuantityUnit)
        </td>
        <td>
            @Html.LabelFor(model=>model.ObjBloodStockDetails.QuantityML)
        </td>
         
        
    </tr>
@foreach (var item in HospitalManagementSystem.Utility.GetBloodStockLists())
{
  
    <tr>
        <td class="span1l">
            @Sno
        </td>
        <td>
           @HospitalManagementSystem.Utility.GetBloodGroupTitle(Convert.ToInt32(item.BloodType.ToString()))
        </td>
        <td>
            @item.QuantityUnit
        </td>
        <td>
            @item.QuantityML
        </td>
        
        
    </tr>
    Sno++;
}
        </table>
}
else
{
    <h4>There are no Blood in stock yet</h4> 
}

</div>

<br />


@{if (!String.IsNullOrEmpty(ViewBag.errorsOccurred))
    {
        <div class="alert alert-error">
            @ViewBag.errorsOccurred
        </div>
    }
}




@using (Html.BeginForm("Create","BloodTransection", FormMethod.Post, new { @class="bs-docs-example form-inline"}))
{
    @Html.ValidationSummary(true)
  

    <fieldset>
        <legend>Create</legend>

        <div class="row-fluid singleline">

            <label>
                <span class="size">@Html.ValidationMessageFor(model => model.DepartmentId)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.DepartmentId)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.DepartmentId, HospitalManagementSystem.Utility.GetDepartmentList())
            
                </div>

          </label>

            <label>
        
                <span class="size">@Html.ValidationMessageFor(model => model.PatientId)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PatientId)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PatientId)
                </div>

            </label>


            <label>
                <span class="size">@Html.ValidationMessageFor(model => model.BloodTypeId)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.BloodTypeId)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.BloodTypeId, HospitalManagementSystem.Utility.GetBloodGroupList())
            
                </div>

          </label>



        </div>

        <div class="row-fluid singleline">
          
            
            <label>
        
                <span class="size">@Html.ValidationMessageFor(model => model.ObjBTDetails.QuantityML)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ObjBTDetails.QuantityML)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ObjBTDetails.QuantityML)
                </div>

            </label> 

            <label>
        
                <span class="size">@Html.ValidationMessageFor(model => model.ObjBTDetails.QuantityUnit)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ObjBTDetails.QuantityUnit)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ObjBTDetails.QuantityUnit)
                </div>

            </label>

            <label>
                <span class="size">@Html.ValidationMessageFor(model => model.ObjBTDetails.PouchNumber)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ObjBTDetails.PouchNumber)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ObjBTDetails.PouchNumber)
            
                </div>

          </label>
            
                   
     
        </div>


        <div class="row-fluid singleline">

            
                  
           
            <label>
        
                <span class="size">@Html.ValidationMessageFor(model => model.ReferBy)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ReferBy)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ReferBy)
                </div>

            </label>

            <label>
                <span class="size">@Html.ValidationMessageFor(model => model.RequiredDate)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequiredDate)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.RequiredDate, new{@Value=DateTime.Now.ToShortDateString(),@id="RequiredDateId"})
                </div>

            </label>

            <label>
        
                <span class="size">@Html.ValidationMessageFor(model => model.Purpose)</span>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Purpose)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Purpose)
                </div>

            </label>

         </div>



        <div class="row-fluid singleline">

            

            

            
         </div>

    
    </fieldset>
<br />
<p>
    <input type="submit" value="Create" />
</p>
    
}
<div>
       @Html.ActionLink("Back to List", "Index", null, new { @id="linkNewBack" })
</div>
</div>