@model HospitalManagementSystem.Models.IpdRegistrationMasterModel
@{
    
    ViewBag.Title = "IPD";
    Layout = "~/Views/Shared/_IPDLayout.cshtml";
}

<style>
    select {
        width: 208px;
        height: 27px;
    }
</style>


<script>
    $(document).ready(function (e) {

        //$("#RegistrationDate").val("");



    });



</script>


<script>
    var j = $.noConflict();
    j(function () {

        j("#RegistrationDate").datepicker();
        j("#RoomTypeDivId").val(0);
        j("#BedId").val(0);
        var OpdNoEmergencyNo = $("#OpdPatientId").val();

        if (parseInt(OpdNoEmergencyNo) != 0) {

            $.ajax({
                url: '/IpdRegistrationMaster/_GetPatientDetails/',
                type: 'GET',
                data: {

                    OpdNoEmergencyNo: OpdNoEmergencyNo
                },
                success: function (data) {
                    $('#SearchById').html(data);
                },
                errro: function () {
                    alert('Sorry Error Occured');
                }
            });
        }

    });
</script>






<script src="~/TestDropDown/Drop.js"></script>
<script src="~/TestDropDown/Drop1.js"></script>
<link href="~/TestDropDown/DropCss.css" rel="stylesheet" />
<link href="~/TestDropDown/DropCss1.css" rel="stylesheet" />


@if (TempData["Failed"] == "0")
{
    <script type="text/javascript">

        alert('Insertion Failed Check Data Again!! ')

    </script>
}

<h2 style="text-align: center;">IPD Registration</h2>


<div class="contentWrapper">

    @using (Html.BeginForm("InsertFroCentralizeBillingInIPDResistrationMaster", "IpdRegistrationMaster", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
    {
      
    
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Create</legend>


            <div class="row-fluid singleline">




                <label>

                    <div class="size">
                        @Html.ValidationMessageFor(model => model.OpdNoEmergencyNo)
                    </div>
                    <div>@Html.LabelFor(model => model.OpdNoEmergencyNo)</div>
                    <div>
                                      
                       @Html.TextBoxFor(model => model.OpdNoEmergencyNo, new { @id ="OpdPatientId",@readonly="readonly"})
                       
                  

                    </div>

                </label>


               

            </div>



            <span id="SearchById"></span>


            @if (TempData["existPatientinIpd"] != null)
            {
                <span style="color: red;">@TempData["existPatientinIpd"]</span>
            }


            <div class="row-fluid singleline">
                <label>

                    <div class="size">
                        @Html.ValidationMessageFor(model => model.DiagnosisID)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DiagnosisID)
                    </div>


                    <div class="editor-field">
                        @Html.DropDownListFor(mod => mod.DiagnosisID, HospitalManagementSystem.Utility.GetDiagosisList())
                    </div>



                </label>



                <label>



                    <div class="size">@Html.ValidationMessageFor(model => model.RegistrationDate)</div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RegistrationDate)
                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.RegistrationDate, new { @Value = DateTime.Now.ToShortDateString() })
                    </div>

                </label>



                <label>
                    <div>
                        @Html.LabelFor(model => model.IpdPatientroomDetailsModel.WardNo)
                    </div>
                    <div>
                        @Html.DropDownListFor(model => model.IpdPatientroomDetailsModel.WardNo, HospitalManagementSystem.Utility.GetIpdWardName())
                    </div>
                </label>


                <label>
                    <div>
                        @Html.LabelFor(model => model.IpdPatientroomDetailsModel.RoomType)

                    </div>
                    <div>
                        @Html.DropDownListFor(model => model.IpdPatientroomDetailsModel.RoomType, HospitalManagementSystem.Utility.GetRoomType(), new { @required = "@required", @id = "RoomTypeDivId", @onchange = "JqueryAjaxLoadSelectOption(this.value,'RoomNumberId','/AjaxRequest/GetRoomNumber/')" })
                    </div>
                </label>




            </div>


            <div class="row-fluid singleline">


                <label>
                    <div>
                        @Html.LabelFor(model => model.IpdPatientroomDetailsModel.RoomNo)
                    </div>
                    <div>
                        @Html.DropDownListFor(model => model.IpdPatientroomDetailsModel.RoomNo, HospitalManagementSystem.Utility.GetRoomNumber(1), "select", new { @required = "@required", @disabled = "disabled", @id = "RoomNumberId", @onchange = "JqueryAjaxLoadSelectForBed(this.value, 'BedId','/AjaxRequest/GetBedNumber/')" })
                    </div>

                </label>

                <label>
                    <div>
                        @Html.LabelFor(model => model.IpdPatientroomDetailsModel.BedNo)
                    </div>
                    <div>

                        @Html.DropDownListFor(model => model.IpdPatientroomDetailsModel.BedNo, HospitalManagementSystem.Utility.GetBedNumber(1), "select", new { @required = "@required", @disabled = "disabled", @id = "BedId", @onchangeerwe = "JqueryAjaxAmountDisplay(this.value,'/AjaxRequest/GetRoomAmount/')" })
                    </div>

                </label>

                <label>
                    <div>
                       
                    </div>
                    <div>
                        @Html.HiddenFor(model => model.IpdPatientBedDetailsModel.Amount, new { @id = "bedAmountDiv" })
                    </div>
                </label>

               @* <label>
                    <div>
                        Deposit Amount
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.DepositeAmount, new { @id = "DepoAmountId" })
                    </div>
                </label>*@

            </div>



            <p>
                <input type="submit" value="Create" />
                






    

            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


    <script src="~/Scripts/json.cycle.js"></script>
    <script>

        function JqueryAjaxLoadSelectForBed(selValue, targetElm, url) {

            var roomTypeId = $("#RoomTypeDivId").val()
            //alert(selValue + " " + roomTypeId + " " + targetElm + "" + url)
            $.ajax({
                async: false,
                type: "GET",
                url: url,
                contentType: "text/json",
                data: ({ RoomNumber: selValue, RoomTypeID: roomTypeId }),
                beforeSend: function () {
                    $("#" + targetElm).attr('disabled', 'disabled');
                    $("#" + targetElm).addClass('ac_loading');
                },

                success: function (jsonResult) {
                    //sPropose For Retrive Bed Amount Here
                    var newUrl = "/AjaxRequest/GetRoomAmount/";
                    JqueryAjaxAmountDisplay(roomTypeId, selValue, newUrl)
                    //End Bed Amount Here
                    var evlResult = JSON.retrocycle(jsonResult);
                    var selOption = "";
                    selOption = ParseJsonResultForSelectOptions(evlResult);
                    tempTargetElm = targetElm.split(',');
                    for (var i = 0; i < tempTargetElm.length; i++) {
                        // alert(tempTargetElm.length + " : " + tempTargetElm[i]);
                        $("#" + tempTargetElm[i]).empty().append(selOption);
                        $("#" + tempTargetElm[i]).removeClass('ac_loading');
                        $("#" + tempTargetElm[i]).removeAttr('disabled');
                    }


                },
                error: function (jsonResult) {
                }
            });

            function ParseJsonResultForSelectOptions(evlResult) {
                var selOption = "";
                $.each(evlResult, function (key, item) {
                    var isSelected = (item['Selected'] == "true") ? "Selected='Selected'" : "";
                    //var otherAttrib = (item['Attribs']!=undefined)? item['Attribs']:"";
                    var otherAttrib = "";
                    $.each(item, function (name, value) {
                        if (name != 'Selected' && name != 'Value' && name != 'Text') {
                            otherAttrib += " " + name + '="' + value + '" ';
                        }
                    });
                    selOption += "<option value='" + item['Value'] + "' " + isSelected + " " + otherAttrib + " >"
                    + evlResult[key].Text + "</option>";
                });

                return selOption;
            }

        }

    </script>

    <script type="text/javascript">
        function JqueryAjaxLoadSelectOption(selValue, targetElm, url) {
            $.ajax({
                async: false,
                type: "POST",
                url: url + selValue,
                contentType: "text/json",
                data: ({ id: selValue }),
                beforeSend: function () {
                    $("#" + targetElm).attr('disabled', 'disabled');
                    $("#" + targetElm).addClass('ac_loading');
                },

                success: function (jsonResult) {
                    //alert(jsonResult);

                    var evlResult = JSON.retrocycle(jsonResult);
                    var selOption = "";
                    selOption = ParseJsonResultForSelectOptions(evlResult);
                    tempTargetElm = targetElm.split(',');
                    for (var i = 0; i < tempTargetElm.length; i++) {

                        $("#" + tempTargetElm[i]).empty().append(selOption);
                        $("#" + tempTargetElm[i]).removeClass('ac_loading');
                        $("#" + tempTargetElm[i]).removeAttr('disabled');
                    }
                    $("#bedAmountDiv").val("0");
                    $("#BedId").val("0");


                },
                error: function (jsonResult) {
                }
            });

            function ParseJsonResultForSelectOptions(evlResult) {
                var selOption = "";
                $.each(evlResult, function (key, item) {
                    var isSelected = (item['Selected'] == "true") ? "Selected='Selected'" : "";
                    //var otherAttrib = (item['Attribs']!=undefined)? item['Attribs']:"";
                    var otherAttrib = "";
                    $.each(item, function (name, value) {
                        if (name != 'Selected' && name != 'Value' && name != 'Text') {
                            otherAttrib += " " + name + '="' + value + '" ';
                        }
                    });
                    selOption += "<option value='" + item['Value'] + "' " + isSelected + " " + otherAttrib + " >"
                    + evlResult[key].Text + "</option>";
                });

                return selOption;
            }

        }



    </script>
    @*//Get Amount*@
    <script type="text/javascript">
        function JqueryAjaxAmountDisplay(roomtype, RoomNumber, url) {

            $.ajax({

                async: false,
                type: "GET",
                url: url,
                contentType: "text/json",
                data: ({ roomTypeId: roomtype, RoomNumber: RoomNumber }),
                beforeSend: function () {
                    //$("#" + targetElm).attr('disabled', 'disabled');
                    //$("#" + targetElm).addClass('ac_loading');
                },

                success: function (jsonResult) {

                    var aa = $('#BedId').val();

                    $("#bedAmountDiv").val(jsonResult);


                },
                error: function (jsonResult) {
                }
            });
        }

    </script>


    <script type="text/javascript">

        $('#btnClick').click(function () {

            // var DepartmentID = $("#DepartmentID").val();
            var OpdNoEmergencyNo = $("#OpdPatientId").val();
            // alert(OpdNoEmergencyNo);

            $.ajax({
                url: '/IpdRegistrationMaster/_GetPatientDetails/',
                type: 'GET',
                data: {

                    OpdNoEmergencyNo: OpdNoEmergencyNo
                },
                success: function (data) {
                    $('#SearchById').html(data);
                },
                errro: function () {
                    alert('Sorry Error Occured');
                }
            });
        });
    </script>

    <script>
        $('#RoomTypeDivId').on("change", function (e) {

            // alert("ji");

            var val = this.value;

            // alert(this.value);
            if (this.value == "Select Room Type") {
                $('#BedId').val("");
                $('#bedAmountDiv').val("");


            }


        });



    </script>


</div>
