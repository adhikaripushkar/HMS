@using PagedList.Mvc
@using PagedList
@model Hospital.Models.SetUpMemberShipModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MasterSetupLayout.cshtml";
    
}


<link href="~/Content/PagedList.css" rel="stylesheet" />

<h2 style="text-align:center;">Setup Membership </h2>






@if (TempData["success"] == Hospital.UtilityMessage.save)
{ 
    <div class="alert alert-success">
@TempData["success"]
        </div>
}

@if (TempData["success"] == Hospital.UtilityMessage.savefailed)
{ 
    <div class="alert alert-error">
@TempData["success"]
        </div>

}

@if (TempData["success"] == Hospital.UtilityMessage.edit)
{ 
    <div class="alert">
@TempData["success"]
        </div>

}


@if (TempData["success"] == Hospital.UtilityMessage.editfailed)
{ 
    <div class="alert">
@TempData["success"]
        </div>

}

 

@if (TempData["success"] == Hospital.UtilityMessage.delete)
{ 
    <div class="alert alert-info">
@TempData["success"]
        </div>

}


@if (TempData["success"] == Hospital.UtilityMessage.deletefailed)
{ 
    <div class="alert">
@TempData["success"]
        </div>

}




<div class="contentWrapper">

<p>
    @Html.ActionLink("Create New", "Create", null, new { @id="linkNewBack"})
</p>

    


<div class="general-box clearfix">

        <div class="general-box clearfix">

       <div class="boxWrapper">
    <div class="boxHeadingPanel"><h1>Membership</h1></div>



<table class="table table-hover tablesorter">
    <thead>
    <tr>
       @* <th>
            @Html.DisplayNameFor(model => model.SetupMemberID)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.MemberID)
        </th>
        <th>
            Member Type
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.JoinDate)
        </th>*@
        <th style="width:175px;">
            Name
        </th>
       @* <th>
            @Html.DisplayNameFor(model => model.DateofBirth)
        </th>*@
        <th style="width:30px;">
            Max.Dependent
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobileNumber)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.ContactNumber)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            Blood Group
        </th>
       @* <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>*@
      @*  <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>*@
       @* <th>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.Remarks)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>Action</th>
    </tr>
        </thead>
    <tbody>

@foreach (var item in ViewBag.OnePageOfProducts)
{
    <tr>
      @*  <td>
            @Html.DisplayFor(modelItem => item.SetupMemberID)
        </td>*@
        <td>
            @*@Html.DisplayFor(modelItem => item.MemberID)*@


            @item.MemberID



        </td>
        <td>
            @Hospital.Utility.MemberTypeName(item.MemberTypeID)
            
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.JoinDate)
        </td>*@
        <td style="width:175px;">

            

            @item.FirstName &nbsp; @item.MiddleName &nbsp; @item.LastName

            
        </td>
      @*  <td>
            @Html.DisplayFor(modelItem => item.DateofBirth)
        </td>*@
        <td style="width:30px;">
            

            @item.MaximumDependent

        </td>
        <td>
            

            @item.Address

        </td>
        <td>
            @item.MobileNumber
        </td>
       @* <td>
            @Html.DisplayFor(modelItem => item.ContactNumber)
        </td>*@
        <td>
            

            @item.Gender
        </td>
        <td>
            

            @Hospital.Utility.GetBloodGroupNameWithId(Convert.ToInt16(item.BloodGroupID))
            
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>*@
      @*  <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
        </td>*@
       @* <td>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.Remarks)
        </td>*@
        <td>
            

            @item.Status

        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new {  id=item.SetupMemberID }) |
           @* @Html.ActionLink("Details", "Details", new { id=item.SetupMemberID})*@ |
            

            @Html.ActionLink("Delete", "Delete", new { id=item.SetupMemberID },new {onclick = "return confirm('Do you want to delete?');"})
        </td>
    </tr>
}
        </tbody>

</table>
           
         


                @*for sorting *@
        
               <div class="boxFooter" style="height:70px;">
                   
                   <div id="pager" style="float:left; display:none;">
            <form>
            <img src="@Url.Content("~/Content/images/first.png")" class="first" />
            <img src="@Url.Content("~/Content/images/prev.png")" class="prev" />
            <input class="pagedisplay" type="text" style="width:60px;height:24px;">
            <img src="@Url.Content("~/Content/images/next.png")" class="next" />
            <img src="@Url.Content("~/Content/images/last.png")" class="last" />
            <select class="pagesize valid" style="width:70px;height:30px;"">
                <option selected="selected" value="25">25</option>
                <option value="5">5</option>
                <option value="20">20</option>
                <option value="30">30</option>
                <option value="40">40</option>
                <option value="50">50</option>
            </select>
            </form>
            </div>

                    <div class="pagedList" style="float:left;">
                   @Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions { LinkToFirstPageFormat = "<< First", LinkToPreviousPageFormat = "< Previous", LinkToNextPageFormat = "Next >", LinkToLastPageFormat = "Last >>" })
                   @*@Html.PagedListPager( (IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast )*@
                </div>

    </div>

               </div> 

        @*---------------*@
            </div></div></div>