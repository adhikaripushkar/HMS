@model Hospital.Models.StockItemModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_StockSetupLayout.cshtml";
}

<h2 style="text-align:center;">Item Type Setup</h2>


 @if (TempData["message"] != null || TempData["message"] != "")
            { 
                <p>
                    @TempData["message"]
                </p>
            }

 <div class="contentWrapper">

@using (Html.BeginForm())
{
      
    @Html.ValidationSummary(true)
    <div class="bs-docs-example form-inline">
        <fieldset>
            <legend>Create</legend>
           

            <div class="row-fluid singleline">
            <label>
            <div class="size">@Html.ValidationMessageFor(model => model.StockItemTypeName)</div>
            <div class="editor-label">
                @Html.LabelFor(model => model.StockItemTypeName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.StockItemTypeName)
                
            </div>
                </label>
                </div>



            <p>
                <input type="submit" value="Create" />
               
            </p>
        </fieldset>
    </div>
    
}



<div>
 <span id="linkNewBack">@Html.ActionLink("Back to List", "Index")</span>
</div>
     </div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")


<script type="text/javascript">

    $(document).ready(function () {
        //alert();
      
       
        $("#StockItemTypeName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/StockItem/AutocompleteItemType",
                    type: "GET",
                    dataType: "json",
                    data: { s: request.term },
                    success: function (data) {
                        
                        response($.map(data, function (item) {
                            
                            return { label: item ,value:""};
                           

                        }))

                    },
                    //error:function(data){
                    //    response($.map(data, function (item) {

                    //        return { label: item.StockUnitName, Value: item.StockUnitName };
                    //    }))
                    //}
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    });
</script>

    }
