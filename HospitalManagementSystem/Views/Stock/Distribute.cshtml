@model Hospital.Models.StockDistributionMasterModel

@{
    ViewBag.Title = "Distribute";
    Layout = "~/Views/Shared/_StockLayout.cshtml";
}
@*<link href="~/Content/jquery-ui-1.8.21.custom.css" rel="stylesheet" />*@
<script src="@Url.Content("~/Scripts/OrderManagerScript.js")" type="text/javascript"></script>
<style>
    .custom-table td {
    border:none;
    }
</style>
<script>
    var j = $.noConflict();
    j(function () {
        j("#BillDate").datepicker();
       

    });

  </script>

<script type="text/javascript">
   
   $(document).ready(function () {
        AddClickEvents();

    });
</script>

<h2 style="text-align:center;">Stock Distribution</h2>

<div class="contentWrapper">
<div>
    @TempData["message"]
</div>

@using (Html.BeginForm("Distribute", "Stock", FormMethod.Post, new { @id = "FormId" }))
{
    
    <div class="bs-docs-example form-inline">
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model=>model.Type)
    <fieldset>
        <legend>Stock Distribution</legend>

            <div class="row-fluid singleline">
        <div>
             @Html.RadioButton("radio", false, new { id="in"})
        In Patient &nbsp;&nbsp;&nbsp;&nbsp;
             @Html.RadioButton("radio", false, new { id="out"})
            Out Patient
          
            </div>
        <br />
        <br />
                </div>

        <div class="row-fluid singleline">


       <div id="field" style="display:none">
        <div id="search" style="display:none">
           
            <label>
            <div>
      Search by Patient Id
                </div>
            <div>
            @Html.EditorFor(model => model.PatientId)&nbsp;&nbsp;&nbsp;<span><input type="button" id="btnsearch" value="Search"/></span>
                </div>
           
                </label>
            <br /><br />

            <label>
            <div class="editor-label">
           Department
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.DepartmentId)
         <input type="text" id="dep"/>
        </div>
                </label>
        </div>
           <br /><br />

           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.BillNo)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.BillNo, new { @readonly="readonly"})
            @Html.ValidationMessageFor(model => model.BillNo)
        </div>
</label>
           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.BillDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BillDate)
            @Html.ValidationMessageFor(model => model.BillDate)
        </div>
</label>
        
           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.PatientName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PatientName)
            @Html.ValidationMessageFor(model => model.PatientName)
        </div>
               </label>

           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>
               </label>
<br /><br />
           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.Age)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Age)
            @Html.ValidationMessageFor(model => model.Age)
        </div>
               </label>

          
           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.Sex)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Sex,Hospital.Utility.GetGenderList())
            @Html.ValidationMessageFor(model => model.Sex)
        </div>
               </label>

       
           <label>
        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
          
        </div>

</label>

      <br /><br /><br />
       
            @Html.HiddenFor(model => model.Type)

            <div class="well well-small" id="Add-Item" style="width:990px;">
         
            @Html.ActionLink("Add Items", "ItemDistribution", null, new {@id="btns", @class = "addProductItem btn btn-primary"})
          
            <table id="tblotm" style="width:740px;margin-left:20px">
                  <tr>
                      <td class="span5 pagination-centered" style="border:none;width:35px">Category</td>
                      <td class="span5 pagination-centered" style="border:none;width:35px">Sub Category</td>
                      <td class="span5 pagination-centered" style="border:none;width:35px">Item Name</td>
                      <td class="span5 pagination-centered" style="border:none;width:35px">Quantity</td>
                      <td class="span5 pagination-centered" style="border:none;width:35px">Rate</td>
                  </tr>
               </table><table>
                    @try
                    {
                        foreach (var item in Model.StockItemEntryList)
                        {
                        
                     <tr>
                         @Html.Partial("ItemDistribution", item)
                    </tr>
                        }
                    }
                    catch { }
                   
            </table>
        </div>
        
           
                <table class="custom-table">
                  <tr>
                 
                          <td> Amount  @Html.TextBoxFor(model => model.Amount, new { @readonly="readonly"})</td>   
                    
                     
@*                 
                             <td> Discount(%)  @Html.TextBoxFor(model => model.Discount)</td>  
                        
                  
                         <td> Vat(%) @Html.TextBoxFor(model=>model.VatAmount)</td>
                *@
                 
                 
                       <td> Total Amount   @Html.TextBoxFor(model => model.TotalAmount, new { @readonly="readonly"})</td>   
                          </tr>     
                    </table>
              @Html.Hidden("tempamount")
      </div>

        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
    </div>
}

<div id="linkNewBack">
    @Html.ActionLink("Back", "Index")
</div>
</div>


<script type="text/javascript">
    $("#Add-Item").on('click', '.row-button', function () {
        $(this).closest("div.row").remove();

        var form = $('#FormId');
        var url = '@Url.Action("GetSum","Stock")';
        var formData = form.serialize();

        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
            $("#TotalAmount").val(f);
        });

    })
        </script>
<script>

    var d;
    $("#in").click(function () {
     
        $("#search").show();
        $("#field").show();
        $("#Type").val("IN");
    })

    $("#out").click(function () {
        $("#field").show();
        $("#Type").val("OUT");
        $("#PatientId").val(0);
        $("#search").hide();
        $("#PatientName").val("");
        $("#Address").val("");
        $("#Sex").val("");
        $("#Age").val("");
        $("#DepartmentId").val(0);
        $("#dep").val("");
    })


    $("#btnsearch").click(function () {
       
        var i = $("#PatientId").val();
        
        $.get('/Stock/SearchPatient/'+i,
            function (data) {
                //alert(data[0]);
               
                $("#PatientName").val(data[0] + " " +data[1] + " " + data[2]);
                $("#Address").val(data[3]);
                $("#Sex").val(data[4]);
                $("#Age").val(data[5]);
                $("#DepartmentId").val(data[6]);
                $("#dep").val(data[7]);
                
            })
    })

    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockSubCategoryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetSubCategory/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.SubCategoryId', function () {
        var id = this.id;

        id = id.replace("__StockSubCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemNameInDep/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });


    $("#Add-Item").on('change', '.CategoryId', function () {
        var id = this.id;

        id = id.replace("__StockCategoryId", "__StockItemEntryId");
        $('#' + id).val('');


        $.get('/AjaxRequest/GetItemNameByCategoryInDep/' + this.value,
              function (data) {
                  $('#' + id).find('option').remove()
                  $(data).each(
                      function (index, item) {
                          $('#' + id).append('<option value="' + item.Value + '">' + item.Text + '</option>')
                      });
              }
    );
    });

</script>
<script>
    $("#Add-Item").on('keyup', '.Rate', function (e) {

        e.preventDefault();
        $("#amounts").show();

        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum","Stock")';
        var formData = form.serialize();
        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
            $("#TotalAmount").val(f);
        });
     });
    $("#Add-Item").on('keyup', '.Quantity', function (e) {

        e.preventDefault();
        $("#amounts").show();

        var form = $('#FormId');
        //var url = form.attr("action");
        var url = '@Url.Action("GetSum","Stock")';
        var formData = form.serialize();
        $.post(url, formData, function (data) {
            $("#Amount").val(data);
            $("#tempamount").val(data);
            var a = $("#tempamount").val();
            var b = $("#VatAmount").val();
            var c = (parseFloat(b) / 100) * parseFloat(a);
            var d = parseFloat(a) + parseFloat(c);
            var e = $("#Discount").val();
            var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
            $("#TotalAmount").val(f);
        });
    });
    </script>

<script>

    $("#Discount").live('keyup', function (e) {
        e.preventDefault();
        var a = $("#tempamount").val();
        var b = $("#VatAmount").val();
        var c = (parseFloat(b) / 100) * parseFloat(a);
        var d = parseFloat(a) + parseFloat(c);
        var e = $("#Discount").val();
        var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
        $("#TotalAmount").val(f);
    });

    $("#VatAmount").live('keyup', function (e) {
        e.preventDefault();
        var a = $("#tempamount").val();
        var b = $("#VatAmount").val();
        var c = (parseFloat(b) / 100) * parseFloat(a);
        var d = parseFloat(a) + parseFloat(c);
        var e = $("#Discount").val();
        var f = parseFloat(d) - parseFloat(e) * parseFloat(d) / 100;
        $("#TotalAmount").val(f);
    });

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
