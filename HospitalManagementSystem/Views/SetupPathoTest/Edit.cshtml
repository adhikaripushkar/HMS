@model Hospital.Models.SetupPathoTestModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_PathoAndRadiologyLayout.cshtml";
}

<h2 align="Center">Test Setup</h2>

<div class="contentWrapper">

    @using (Html.BeginForm("Edit", "SetupPathoTest", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
    {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Edit</legend>
            @Html.HiddenFor(model => model.TestId)
            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.TestCode)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TestCode)

                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.TestCode)

                    </div>
                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.TestName)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TestName)

                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.TestName)

                    </div>
                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.SectionId)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.SectionId)

                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.SectionId, Hospital.Utility.GetSectionList())

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.UnitId)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.UnitId)

                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.UnitId, Hospital.Utility.GetUnitList())

                    </div>
                </label>

            </div>


            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Price)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Price)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Price, new { @id = "TstPriceId", @onkeyup = "onchangeevent();" })

                    </div>
                </label>


                <label>
                    @*<span class="size">@Html.ValidationMessageFor(model => model.Price)</span>*@
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Tax)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Tax, new { @id = "TaxId", @onkeyup = "onchangeevent();" })

                    </div>
                </label>

                <label>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.TaxAmount)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TaxAmount, new { @id = "TaxAmtid", @readonly = "readonly" })

                    </div>
                </label>

                <label>
                    @*<span class="size">@Html.ValidationMessageFor(model => model.Price)</span>*@
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TotalAmount)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TotalAmount, new { @id = "txtTotalAmount", @readonly = "readonly" })

                    </div>
                </label>
            </div>
            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.PayablePercentage)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PayablePercentage)

                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PayablePercentage, new { @id = "PPrecentage", @onkeyup = "PercentageOnChange();" })

                    </div>
                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.PayableGrandTotal)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PayableGrandTotal)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PayableGrandTotal, new { @readonly = "readonly", @id = "PPGrandTT" })

                    </div>
                </label>
            </div>



            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.HosPer)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.HosPer)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.HosPer, new { @id = "txtHosPer", @onkeyup = "onchangeevent();" })

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.HosPerAmt)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.HosPerAmt)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.HosPerAmt, new { @id = "txtHosPerAmt", @readonly = "readonly" })

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.DocPer)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DocPer)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.DocPer, new { @id = "txtDocPer", @readonly = "readonly" })

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.DocPerAmt)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DocPerAmt)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.DocPerAmt, new { @id = "txtDocPerAmt", @readonly = "readonly" })

                    </div>
                </label>
            </div>

            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.PathologyComm)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PathologyComm)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PathologyComm, new { @id = "PathologyCommDiv", @onkeyup = "PathologyCommChange();" })

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.PathologyCommAmt)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PathologyCommAmt)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PathologyCommAmt, new { @id = "PathologyCommAmtDiv" })

                    </div>
                </label>
            </div>


            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.PriceForeigner)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PriceForeigner)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.PriceForeigner, new { @id = "TstPriceIdForeigner", @onkeyup = "onchangeeventForeigner();" })

                    </div>
                </label>


                <label>
                    @*<span class="size">@Html.ValidationMessageFor(model => model.Price)</span>*@
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TaxForeigner)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TaxForeigner, new { @id = "TaxIdForeigner", @onkeyup = "onchangeeventForeigner();" })

                    </div>
                </label>

                <label>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.TaxAmountForeigner)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TaxAmountForeigner, new { @id = "TaxAmtidForeigner", @readonly = "readonly" })

                    </div>
                </label>

                <label>
                    @*<span class="size">@Html.ValidationMessageFor(model => model.Price)</span>*@
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TotalAmountForeigner)

                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TotalAmountForeigner, new { @id = "txtTotalAmountForeigner", @readonly = "readonly" })

                    </div>
                </label>
            </div>





            <div class="row-fluid singleline">

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.RefRange)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RefRange)

                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.RefRange)

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.ConvFactor)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ConvFactor)

                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.ConvFactor)

                    </div>
                </label>


            </div>

            <div class="row-fluid singleline">

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.IsParent)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.IsParent)

                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.IsParent)

                    </div>
                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.IsCommision)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.IsCommision)
                    </div>
                    <div class="editor-field">
                        @Html.CheckBoxFor(model => model.IsCommision)

                    </div>
                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.ParentId)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ParentId)

                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.ParentId, Hospital.Utility.GetTestParentHead())

                    </div>
                </label>

            </div>






            <p>
                <input type="submit" value="Edit" />
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</div>




<script type="text/javascript">

    function onchangeevent() {
        var testPriceFee = $("#TstPriceId").val();
        var vartxtTax = $("#TaxId").val();
        if (testPriceFee == '') {
            testPriceFee = 0;
        }
        if (vartxtTax == '') {
            vartxtTax = 0;
        }
        var vat = parseFloat(vartxtTax);

        var Totalpercentage = parseFloat(testPriceFee) * parseFloat(vat / 100);

        $("#TaxAmtid").val(Totalpercentage.toFixed(2));

        //var varTotalAmount = parseInt(vartxtHospitalFee) + parseInt(vartxtTax) + parseInt(vartxtVat);
        var varTotalAmount = parseFloat(testPriceFee) + parseFloat(Totalpercentage);
        var varTotalAmount = varTotalAmount.toFixed(2);
        $("#txtTotalAmount").val(varTotalAmount);

        var TotalPayable = $("#PPGrandTT").val();
        var vartxtHospitalPer = $("#txtHosPer").val();
        var vartxtvarDocPer = $("#txtDocPer").val();
        if (vartxtHospitalPer == '') {
            vartxtvarDocPer = 0;
            vartxtHospitalPer = 0;
        }
        if (TotalPayable == '') {
            TotalPayable = 0;
        }

        var varHosPerAmt = (parseFloat(TotalPayable) / 100) * vartxtHospitalPer;
        var varHosPerAmt = varHosPerAmt.toFixed(2);
        $("#txtHosPerAmt").val(varHosPerAmt);
        var varDocPer = 100 - parseInt(vartxtHospitalPer);
        $("#txtDocPer").val(varDocPer);

        var varDocPerAmt = TotalPayable - varHosPerAmt;
        $("#txtDocPerAmt").val(varDocPerAmt);

    };


    function onchangeeventForeigner() {
        var testPriceFee = $("#TstPriceIdForeigner").val();
        var vartxtTax = $("#TaxIdForeigner").val();
        if (testPriceFee == '') {
            testPriceFee = 0;
        }
        if (vartxtTax == '') {
            vartxtTax = 0;
        }
        var vat = parseFloat(vartxtTax);

        var Totalpercentage = parseFloat(testPriceFee) * parseFloat(vat / 100);

        $("#TaxAmtidForeigner").val(Totalpercentage.toFixed(2));

        //var varTotalAmount = parseInt(vartxtHospitalFee) + parseInt(vartxtTax) + parseInt(vartxtVat);
        var varTotalAmount = parseFloat(testPriceFee) + parseFloat(Totalpercentage);
        var varTotalAmount = varTotalAmount.toFixed(2);
        $("#txtTotalAmountForeigner").val(varTotalAmount);

    };

</script>
<script type="text/javascript">

    function PathologyCommChange() {
        var PayableTotal = $("#PPGrandTT").val();
        var PathoCommTotal = $("#PathologyCommDiv").val();

        if (PayableTotal == '') {
            PayableTotal = 0;
        }

        if (PathoCommTotal == '') {
            PathoCommTotal = 0;
        }

        var Totalpercentage = parseFloat(PayableTotal) * parseFloat(PathoCommTotal / 100);
        //var TotalFinal = parseFloat(PayableTotal) + parseFloat(Totalpercentage);
        $("#PathologyCommAmtDiv").val(Totalpercentage);
    };



    function PercentageOnChange() {
        var varTstPriceId = $("#TstPriceId").val();
        var VarPayablePerId = $("#PPrecentage").val();

        if (varTstPriceId == '') {
            varTstPriceId = 0;
        }

        if (VarPayablePerId == '') {
            VarPayablePerId = 0;
        }
        var Totalpercentage = parseFloat(varTstPriceId) * parseFloat(VarPayablePerId / 100);
        var TotalFinal = parseFloat(varTstPriceId) + parseFloat(Totalpercentage);


        $("#PPGrandTT").val(TotalFinal);

    };

</script>




@*<script type="text/javascript">
    function onPerchangeevent() {
        var varTstPriceId = $("#TstPriceId").val();
        var vartxtHospitalPer = $("#txtHosPer").val();
        var vartxtvarDocPer = $("#txtDocPer").val();
        if (vartxtHospitalPer == '') {
            vartxtvarDocPer = 0;
        }
        var varHosPerAmt = (parseFloat(varTstPriceId) / 100) * vartxtHospitalPer;
        $("#txtHosPerAmt").val(varHosPerAmt);
        var varDocPer = 100 - parseInt(vartxtHospitalPer);
        $("#txtDocPer").val(varDocPer);

        var varDocPerAmt = varTstPriceId - varHosPerAmt;
        $("#txtDocPerAmt").val(varDocPerAmt);

    }

     </script>*@

