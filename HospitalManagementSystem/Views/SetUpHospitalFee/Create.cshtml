@model Hospital.Models.SetUpHospitalFeeModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_MasterSetupLayout.cshtml";
}

<h2 style="text-align: center;">Registration Fee Setup</h2>

<div class="contentWrapper">

    @using (Html.BeginForm("Create", "SetUpHospitalFee", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
    {
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Create</legend>

            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.FeeType)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FeeType)
                    </div>

                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.FeeType, @Hospital.Utility.GetFeeType(), "Select")

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.FiscalYearId)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FiscalYearId)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(model => model.FiscalYearId, Hospital.Utility.GetFiscalYearForDropDown())

                    </div>

                </label>



                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Remarks)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Remarks)
                    </div>

                    <div class="editor-field">
                        @Html.EditorFor(model => model.Remarks)

                    </div>

                </label>
            </div>

            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.HospitalFee)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.HospitalFee)
                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.HospitalFee, new { @id = "HospitalFee", @onkeyup = "onchangeevent();" })

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Tax)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Tax)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Tax, new { @id = "TaxId", @onkeyup = "onchangeevent();" })

                    </div>
                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.Vat)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Vat)
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.Vat, new { @id = "VatId", @onkeyup = "onchangeevent();" })

                    </div>
                </label>


                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.TotalFee)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TotalFee)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TotalFee, new { @id = "txtTotalAmount" })

                    </div>
                </label>
            </div>

            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.HospitalFeeForeigner)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.HospitalFeeForeigner)
                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.HospitalFeeForeigner, new { @id = "HospitalFeeForeigner", @onkeyup = "onchangeeventForeigner();" })

                    </div>

                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.TaxForeigner)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TaxForeigner)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TaxForeigner, new { @id = "TaxIdForeigner", @onkeyup = "onchangeeventForeigner();" })

                    </div>
                </label>

                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.VatForeigner)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.VatForeigner)
                    </div>
                    <div>
                        @Html.TextBoxFor(model => model.VatForeigner, new { @id = "VatIdForeigner", @onkeyup = "onchangeeventForeigner();" })

                    </div>
                </label>


                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.TotalFeeForeigner)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TotalFeeForeigner)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TotalFeeForeigner, new { @id = "txtTotalAmountForeigner" })

                    </div>
                </label>
            </div>

            <div class="row-fluid singleline">
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.HospitalIncome)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.HospitalIncome)
                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.HospitalIncome)

                    </div>

                </label>
                <label>
                    <span class="size">@Html.ValidationMessageFor(model => model.ConsultantIncome)</span>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ConsultantIncome)
                    </div>

                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ConsultantIncome)

                    </div>

                </label>
            </div>






            <br />
            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @id = "linkNewBack" })
    </div>

    <script type="text/javascript">

        function onchangeevent() {

            var vartxtHospitalFee = $("#HospitalFee").val();
            var vartxtTax = $("#TaxId").val();
            var vartxtVat = $("#VatId").val();

            if (vartxtHospitalFee == '') {
                vartxtHospitalFee = 0;
            }
            if (vartxtTax == '') {
                vartxtTax = 0;
            }
            if (vartxtVat == '') {
                vartxtVat = 0;
            }

            var vatAndTax = parseFloat(vartxtTax) + parseFloat(vartxtVat);
            var Totalpercentage = parseFloat(vartxtHospitalFee) * parseFloat(vatAndTax / 100).toFixed(8);
            //var varTotalAmount = parseInt(vartxtHospitalFee) + parseInt(vartxtTax) + parseInt(vartxtVat);
            var varTotalAmount = parseFloat(vartxtHospitalFee) + parseFloat(Totalpercentage.toFixed(8));
            //alert(varTotalAmount);
            var varTotalAmountFinl = varTotalAmount.toFixed(3);
            //var varTotalAmountFinl = varTotalAmount.toString();
            //varTotalAmountFinl = varTotalAmountFinl.slice(0, (varTotalAmountFinl.indexOf(".")) + 3);
            $("#txtTotalAmount").val(varTotalAmountFinl);
            
        };

        function onchangeeventForeigner() {

            var vartxtHospitalFee = $("#HospitalFeeForeigner").val();
            var vartxtTax = $("#TaxIdForeigner").val();
            var vartxtVat = $("#VatIdForeigner").val();

            if (vartxtHospitalFee == '') {
                vartxtHospitalFee = 0;
            }
            if (vartxtTax == '') {
                vartxtTax = 0;
            }
            if (vartxtVat == '') {
                vartxtVat = 0;
            }

            var vatAndTax = parseFloat(vartxtTax) + parseFloat(vartxtVat);

            var Totalpercentage = parseFloat(vartxtHospitalFee) * parseFloat(vatAndTax / 100).toFixed(8);

            //var varTotalAmount = parseInt(vartxtHospitalFee) + parseInt(vartxtTax) + parseInt(vartxtVat);
            var varTotalAmount = parseFloat(vartxtHospitalFee) + parseFloat(Totalpercentage.toFixed(8));
            //alert(varTotalAmount);
            var varTotalAmountFinl = varTotalAmount.toFixed(3);
            var varTotalAmountFinl = varTotalAmount.toString();
            varTotalAmountFinl = varTotalAmountFinl.slice(0, (varTotalAmountFinl.indexOf(".")) + 3);
            $("#txtTotalAmountForeigner").val(varTotalAmountFinl);

        };



    </script>

    @*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@


</div>
