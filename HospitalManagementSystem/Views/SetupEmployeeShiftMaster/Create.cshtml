@model Hospital.Models.SetupEmployeeShiftMasterModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_PayrollLayout.cshtml";
}


@*for time picker*@

<script src="~/Scripts/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery.ui.timepicker.js"></script>
<link href="~/Content/themes/base/jquery.ui.timepicker.css" rel="stylesheet" />

@*required end for time picker*@

<script>


    var j = $.noConflict();
    j(function () {
        j(".ValidFromDateId").datepicker();
        j(".ValidTillDateId").datepicker();
        j(".StartTimeId").timepicker();
        j(".EndTimeId").timepicker();
       
    });
    </script>
<h2 style="text-align:center;">Employee Shift Setup</h2>
<div class="contentWrapper">

@using (Html.BeginForm("Create", "SetupEmployeeShiftMaster", FormMethod.Post, new { @class = "bs-docs-example form-inline" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Create</legend>

        <div class="editor-label">
            @Html.HiddenFor(model => model.EmployeeShiftMasterId)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.EmployeeShiftMasterId)
            @Html.ValidationMessageFor(model => model.EmployeeShiftMasterId)
        </div>
           <div class="row-fluid singleline">
               <label>
                    <span class="size"> @Html.ValidationMessageFor(model => model.EmployeeShiftName)</span>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeShiftName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmployeeShiftName)
           
        </div>
                   </label>
</div>
         <div class="row-fluid singleline">
             <label>
                 <span class="size">   @Html.ValidationMessageFor(model => model.StartTime)</span>
        <div class="editor-label">
            @Html.LabelFor(model => model.StartTime)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StartTime, new { @class = "StartTimeId", @Value = DateTime.Now.ToString("HH:mm")})
         
        </div>
</label>
             <label>
                    <span class="size">    @Html.ValidationMessageFor(model => model.EndTime)</span>
        <div class="editor-label">
            @Html.LabelFor(model => model.EndTime)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EndTime, new { @class = "EndTimeId", @Value = DateTime.Now.ToShortTimeString() })
        
        </div>
                 </label>
</div>
         <div class="row-fluid singleline">
             <label>
                 <span class="size">    @Html.ValidationMessageFor(model => model.ValidFromDate)</span>
        <div class="editor-label">
            @Html.LabelFor(model => model.ValidFromDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ValidFromDate,new { @class = "ValidFromDateId", @Value = DateTime.Now.ToShortDateString()})
        
        </div>
</label>
             <label> 
                          <span class="size">@Html.ValidationMessageFor(model => model.ValidFromDate)</span>  
                  <div class="editor-label">
            @Html.LabelFor(model => model.ValidTillDate)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ValidTillDate,new { @class = "ValidTillDateId", @Value = DateTime.Now.ToShortDateString()})
            @Html.ValidationMessageFor(model => model.ValidTillDate)
        </div>
                 </label>

             </div>
        <div class="editor-label">
            @Html.HiddenFor(model => model.CreatedDate)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.CreatedDate)
            @Html.ValidationMessageFor(model => model.CreatedDate)
        </div>

        <div class="editor-label">
            @Html.HiddenFor(model => model.CreatedBy)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.CreatedBy)
            @Html.ValidationMessageFor(model => model.CreatedBy)
        </div>

        <div class="editor-label">
            @Html.HiddenFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.HiddenFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new {@id="linkNewBack"})
</div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
